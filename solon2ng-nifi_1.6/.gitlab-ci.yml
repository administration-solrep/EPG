image: idlvdr1.lyon-dev2.local/oracle/maven:3.6.1-jdk-8

#########################################################
# Global variables
#########################################################
variables:
  MAVEN_OPTS: -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2
  SONAR_HOST_URL: ${SONAR_URL}
  GIT_DEPTH: 0

#########################################################
# Set some global caches (gradle to avoid continuous download !)
##########################################################
cache:
  key: SOLON2NG_CACHE
  paths:
    - .m2/



#########################################################
# Templates / settings
#########################################################


#
# Template for ssh key
#
.ssh_key: &ssh_key
##
## Install ssh-agent if not already installed, it is required by Docker.
## (change apt-get to yum if you use an RPM-based image)
##
- 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

##
## Run ssh-agent (inside the build environment)
##
- eval $(ssh-agent -s)

##
## Create the SSH directory and give it the right permissions
##
- mkdir -p ~/.ssh
- chmod 700 ~/.ssh

##
## Use ssh-keyscan to scan the keys of your private server.
## with your own domain name. You can copy and repeat that command if you have
## more than one server to connect to.
##
- ssh-keyscan lyovgitlabidl.lyon-dev2.local >> ~/.ssh/known_hosts
- chmod 644 ~/.ssh/known_hosts

#
# Template for maven settings
#
.mvn_settings: &mvn_settings
- echo $MAVEN_SETTINGS >> ~/.m2/settings.xml

#
# Template for log4j2 settings
#
.log4j2_settings: &log4j2_settings
- echo $LOG4J2_SETTINGS >> /tmp/log4j2-pipeline.xml
- export LOG4J_CONFIGURATION_FILE=/tmp/log4j2-pipeline.xml

#
# Template for dependencies
#
.build_dependency: &build_dependency
- cd ..
- rm -rf $PROJECT_NAME
- git clone https://$CI_TOKEN_USER:$CI_TOKEN_VALUE@lyovgitlabidl.lyon-dev2.local/SOLON/$PROJECT_NAME.git -c http.sslVerify=false
- cd $PROJECT_NAME
- >
  if [[ -n "`git show-ref $CI_COMMIT_REF_NAME`" ]]; then
    git checkout $CI_COMMIT_REF_NAME;
  elif [[ -n "`git show-ref $CI_MERGE_REQUEST_TARGET_BRANCH_NAME`" ]]; then
    git checkout $CI_MERGE_REQUEST_TARGET_BRANCH_NAME;
  else
    git checkout develop;
  fi
- mvn -q clean install -DskipTests -DskipITs -Pdev

###########################################################
# Jobs & scripts
###########################################################

#
# Print information on global context before starting jobs
#
.before_script: &before_script
- echo "======================================================="
- echo "Start jobs on branch $CI_BUILD_REF_NAME / ${CI_COMMIT_REF_NAME}"
- echo "======================================================="
- echo " Stage $CI_JOB_STAGE"
- echo "= Print some predefined variables ====================="
- echo $CI_TOKEN_USER
- echo $CI_PROJECT_NAME
- echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
- echo $CI_COMMIT_REF_NAME
- echo $CI_COMMIT_SHORT_SHA
- echo $CI_PIPELINE_IID
- echo $CI_COMMIT_TAG
- echo $CI_COMMIT_REF_SLUG
- echo $SONAR_URL
- echo $SONAR_TOKEN
- echo $SONAR_PROJECT_NAME
- echo $SONAR_PROJECT_KEY
- echo "======================================================="

#
# End of the script
#
after_script:
  - echo "End jobs $CI_COMMIT_REF_NAME"


#
# Build the components with tests
#
build_components_with_tests:
  stage: build
  before_script:
    - *before_script
    - *ssh_key
    - *mvn_settings
    - *log4j2_settings
  script:
    - mvn -q clean install -Pdev
    - mvn sonar:sonar -Dsonar.pullrequest.branch=$CI_COMMIT_REF_SLUG  -Dsonar.pullrequest.base=develop -Dsonar.pullrequest.key=$CI_MERGE_REQUEST_IID -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectName=$SONAR_PROJECT_NAME -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco-ut/jacoco.xml,target/site/jacoco-it/jacoco.xml,target/site/jacoco-aggregate/jacoco.xml -Dsonar.organization=default-organization -Dsonar.qualitygate.wait=true
  only:
    - merge_requests
  artifacts:
    when: on_failure
    name: "tests-logs"
    paths:
      - "*/target/trace.log"
      - "*/*/target/trace.log"
    expire_in: 1 days

#
# Check Sonar result and fail if quality gates is not OK
#
sonar_check:
  stage: test
  before_script:
    - *before_script
    - *ssh_key
    - *mvn_settings
    - apt-get update
    - apt-get install -y jq
  script:
    - curl -u "${SONAR_TOKEN}:" "${SONAR_URL}/api/project_pull_requests/list?project=$SONAR_PROJECT_KEY" > sonar.json
    - curl -u "${SONAR_TOKEN}:" "${SONAR_URL}/api/measures/component?component=$SONAR_PROJECT_KEY&metricKeys=new_coverage&pullRequest=${CI_MERGE_REQUEST_IID}" > sonar_coverage.json
    - COVERAGE=$(cat sonar_coverage.json | jq '.component.measures[0].periods[0].value')
    - 'echo "Code coverage: $COVERAGE"'
    - SONAR_RESULT=$(cat sonar.json | jq -r --arg CI_MERGE_REQUEST_IID "$CI_MERGE_REQUEST_IID" '.pullRequests[] | select(.key==$CI_MERGE_REQUEST_IID)')
    - "SONAR_STATUS=$(echo $SONAR_RESULT | jq '.status.qualityGateStatus' )"
    - 'echo $SONAR_RESULT > sonar_result.json'
    - unlink /etc/localtime
    - ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime
    - 'export CURRENT_DATE=`date +"%d-%m-%Y %T"`'
    - 'curl --header "PRIVATE-TOKEN: ${CI_TOKEN}" https://lyovgitlabidl.lyon-dev2.local/api/v4/projects/$CI_PROJECT_ID/merge_requests/${CI_MERGE_REQUEST_IID}/notes --insecure > comments.json'
    - "SONAR_COMMENT_ID=$(cat comments.json | jq '.[] | select(.body | startswith(\"[Pipeline] - Sonar result : \")) | .id')"
    - 'HTTP_METHOD="POST"'
    - 'HTTP_URL="https://lyovgitlabidl.lyon-dev2.local/api/v4/projects/$CI_PROJECT_ID/merge_requests/${CI_MERGE_REQUEST_IID}/notes"'
    - '[[ -z "$SONAR_COMMENT_ID" ]] || export HTTP_METHOD="PUT" && export HTTP_URL="$HTTP_URL/$SONAR_COMMENT_ID"'
    - "curl -X $HTTP_METHOD --header \"PRIVATE-TOKEN: ${CI_TOKEN}\" ${HTTP_URL} --insecure -d \"body=[Pipeline] - Sonar result : \r\n\r\n Date : $CURRENT_DATE \r\n\r\n Status : $SONAR_STATUS \r\n\r\n Pour plus de détails, se rendre à l'adresse suivante ${SONAR_URL}/code?pullRequest=$CI_MERGE_REQUEST_IID%26id=$SONAR_PROJECT_KEY\""
    - '[[ ! $SONAR_STATUS = "\"ERROR\"" ]] || exit 1'
  allow_failure: true
  only:
    - merge_requests
  artifacts:
    when: on_failure
    name: "SONAR_RESULT"
    paths:
      - sonar_result.json
      - sonar_coverage.json
    expire_in: 1 days
