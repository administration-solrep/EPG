<html xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:c="http://java.sun.com/jstl/core"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:nxl="http://nuxeo.org/nxforms/layout"
  xmlns:nxu="http://nuxeo.org/nxweb/util"
  xmlns:nxe="http://nuxeo.org/nxweb/seam/excel"  
  xmlns:e="http://jboss.com/products/seam/excel">

  <c:if test="false">
    displays a content view using csv JSF library
    default column width is 20
    
    accepted parameters:
    - when using template: exportFormat (jxl or csv)
    - from request: csvFileName, contentViewName, currentPage, pageSize, contentViewState
  </c:if>

  <nxu:set var="csvFileName" value="#{request.getParameter('csvFileName')!=null?request.getParameter('csvFileName'):'Liste.xls'}">
  <nxu:set var="contentViewName" value="#{request.getParameter('contentViewName')}">
  <nxu:set var="currentPage" value="#{request.getParameter('currentPage')}">
  <nxu:set var="pageSize" value="#{request.getParameter('pageSize')}">
  <nxu:set var="contentViewState" value="#{request.getParameter('contentViewState')}">
  <nxu:set var="resultLayout" value="#{request.getParameter('resultLayout')}">
  <nxu:set var="contentView" value="#{contentViewActions.getCurrentContentView()}" cache="true">
  <nxu:set var="selectedResultLayoutColumns"
    value="#{nxu:test(selectedResultLayoutColumns == null, contentView.currentResultLayoutColumns, selectedResultLayoutColumns)}"
    cache="true">
  <nxu:set var="provider" value="#{contentView.currentPageProvider}"
    cache="true">
    <e:workbook type="jxl" filename="#{csvFileName}" encoding="UTF-8">
    <c:if test="${provider.getProperties().get('exportName')!=null}">
	    <e:worksheet value="#{provider.currentSelectPage.rows}" var="row" defaultColumnWidth="20" startRow="2">
		   	<e:mergeCells startRow="0" startColumn="0" endRow="1" endColumn="4"/>
			<e:cell column="0" row="0" style="xls-alignment:centre;">
				<h:outputText value="#{provider.getProperties().get('exportName')}  "/>
				<h:outputText value="(#{csvPrintActions.getCurrentDate()})"/>
			</e:cell>
	      <c:choose>
		      <c:when test="${empty resultLayout}" >
		         <nxl:layout name="#{contentView.currentResultLayout.name}"
		            value="#{row}" mode="csv"
		            selectedColumns="#{selectedResultLayoutColumns}" />
		      </c:when>
		      <c:otherwise>
		         <nxl:layout name="#{resultLayout}"
		            value="#{row}" mode="csv"
		            selectedColumns="#{selectedResultLayoutColumns}" />
		      </c:otherwise>
	      </c:choose>
	      </e:worksheet>
	</c:if>
    <c:if test="${provider.getProperties().get('exportName')==null}">
	    <e:worksheet value="#{provider.currentSelectPage.rows}" var="row" defaultColumnWidth="20" startRow="0">
			<e:cell column="0" row="0" style="xls-alignment:centre;">
				<h:outputText value="#{provider.getProperties().get('exportName')}  "/>
				<h:outputText value="(#{csvPrintActions.getCurrentDate()})"/>
			</e:cell>
	      <c:choose>
		      <c:when test="${empty resultLayout}" >
		         <nxl:layout name="#{contentView.currentResultLayout.name}"
		            value="#{row}" mode="csv"
		            selectedColumns="#{selectedResultLayoutColumns}" />
		      </c:when>
		      <c:otherwise>
		         <nxl:layout name="#{resultLayout}"
		            value="#{row}" mode="csv"
		            selectedColumns="#{selectedResultLayoutColumns}" />
		      </c:otherwise>
	      </c:choose>
	      </e:worksheet>
    </c:if>
    </e:workbook>
  </nxu:set>
  </nxu:set>
  </nxu:set>
  </nxu:set>
  </nxu:set>
  </nxu:set>
  </nxu:set>
  </nxu:set>
  </nxu:set>

</html>