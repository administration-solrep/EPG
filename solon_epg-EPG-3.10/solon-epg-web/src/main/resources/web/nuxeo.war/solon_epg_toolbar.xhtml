<div xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:nxu="http://nuxeo.org/nxweb/util"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:nxthemes="http://nuxeo.org/nxthemes"
	xmlns:nxh="http://nuxeo.org/nxweb/html" class="reponseToolBar">
	<!-- copié dans mgpp /solon-mgpp-web/src/main/resources/web/nuxeo.war/corbeille/solon_epg_toolbar.xhtml, sans le parent.location=element.href; qui plante l'affichage dans le mgpp... -->
	<script type="text/javascript">
    function openPrintView(defaultTheme) {
        baseURL=window.location.href;
        if (baseURL.indexOf("?") == -1){
            baseURL+='?';
        }
        if (baseURL.indexOf("conversationId")==-1) {
            baseURL+='currentConversationId='+currentConversationId;
        }
        if (defaultTheme.indexOf("/") != -1) {
            //defaultTheme includes the default page
            defaultTheme=defaultTheme.substr(0, defaultTheme.indexOf("/"));
        }
        window.open(baseURL+'&amp;theme='+ defaultTheme +'/print','_blank')
     }
     
	 function gereMessagesConfirmation(event, messageNormal) {
		// FEV 391_5: si l'étape suivante est de type "Pour publication DILA JO" et qu'il existe des publications conjointes, on propose une confirmation alternative
		 var isPubconjointesAvecDILAJO = '#{dossierDistributionActions.checkPublicationConjointeAvantDILAJO()}';
		 var message = messageNormal;
    	 if (isPubconjointesAvecDILAJO == 'true') {
    		 message = "#{messages['feedback.solonepg.feuilleRoute.etapePublicationConjointe']}";
    	 } else {
    		 // FEV507 : controle des avis - une confirmation est affichée si l'étape est identifiée comme invalide.
    	 	var isCheckAvisChargesDeMissionAvantDILAJO = '#{dossierDistributionActions.checkAvisChargesDeMissionAvantDILAJO()}';
	 	 	if (isCheckAvisChargesDeMissionAvantDILAJO == 'false') {
	 			message = "#{messages['feedback.solonepg.feuilleRoute.etapeChargeDeMissionNonValidee']}";
	 		}
	 	 }
    	 
    	 return displayConfirm(event, message);
	}
    
	// FEV 391_5: DELTAT pour le statut initialisé : si l'étape suivante est de type "Pour publication DILA JO" et qu'il existe des publications conjointes, on propose une confirmation alternative
	function confirmBeforeLancer(event) {
		 var isPubconjointesAvecDILAJO = '#{dossierDistributionActions.checkPublicationConjointeAvantDILAJO()}';
    	 if (isPubconjointesAvecDILAJO == 'true') {
    		 message = "#{messages['feedback.solonepg.feuilleRoute.etapePublicationConjointe']}";
    		 return displayConfirm(event, message);
    	 }
    	 return true;
	 }
	 
     function confirmBeforeValidation(event) {
         return gereMessagesConfirmation(event, "#{messages['label.epg.feuilleRoute.etape.confirm.validation']}");
     }
     
     function confirmBeforeValidationAvecCorrection(event) {
         return gereMessagesConfirmation(event, "#{messages['label.epg.feuilleRoute.etape.confirm.validationAvecCorrection']}");
     }
     
     function confirmBeforeRejetValidation(event) {
         return gereMessagesConfirmation(event, "#{messages['label.epg.feuilleRoute.etape.confirm.refusValidation']}");
     }

     function confirmBeforeRetourModification(event) {
         return gereMessagesConfirmation(event, "#{messages['label.epg.feuilleRoute.etape.confirm.retourModification']}");
     }

     function confirmBeforeAnnulerMesureNominative(event) {
        return displayDoubleConfirm(event, "#{messages['epg.dossier.confirm.annulerMesureNominative']}" , "#{messages['epg.dossier.confirm.annulerMesureNominative.confirm']}"); 
     }
     
     function confirmBeforeRedonnerMesureNominative(event) {
         return displayConfirm(event, "#{messages['epg.dossier.confirm.redonnerMesureNominative']}");
     }
     
     function confirmBeforeNorAttribue(event) {
    	 return displayConfirm(event, "#{messages['epg.dossier.confirm.norAttribue']}");
     }
  </script>

	<h:form id="formFdr">
		<nxu:set var="isLockOwner"
			value="#{stLockActions.currentDocIsLockActionnableByCurrentUser()}"
			cache="true">
			<nxu:set var="isLocker"
				value="#{stLockActions.isCurrentDocumentLockedByCurrentUser()}"
				cache="true">
				<table class="fdrActions" style="float: right;">
					<tr>
						<c:if
							test="#{currentDocument.currentLifeCycleState == 'init' and isLocker}">
							<td class="enabledButtonContainer"><nxh:commandLink
									action="#{dossierDistributionActions.lancerDossier(currentDocument)}"
									onclick="return confirmBeforeLancer(event);">
									<h:graphicImage value="/img/icons/check.png"
										title="#{messages['label.reponses.dossier.feuilleRoute.lancer']}" />
								</nxh:commandLink></td>
							<td class="enabledButtonContainer"><nxh:commandLink
									action="#{dossierDistributionActions.norAttribue(currentDocument)}"
									onclick="return confirmBeforeNorAttribue(event);">
									<h:graphicImage value="/img/icons/forbidden.png"
										title="#{messages['label.reponses.dossier.feuilleRoute.norAttribue']}" />
								</nxh:commandLink></td>
						</c:if>

						<nxu:set var="actions"
							value="#{webActions.getActionsList('DOSSIER_TOPBAR_ACTIONS_PRINT')}"
							cache="true">
							<nxu:dataList id="dossierActionsPrintTable" layout="simple"
								var="action" value="#{actions}" rowIndexVar="row"
								rowCountVar="rowCount">

								<f:subview
									rendered="#{ (action.getId() == 'NICE_PRINT_DOSSIER') or (action.getId() == 'CSV_PRINT_DOSSIER')}">
									<td class="disabledButtonContainer"><h:graphicImage
											value="#{action.getIcon()}" alt="#{action.getLabel()}"
											title="#{action.getLabel()}" /></td>
								</f:subview>
								<f:subview
									rendered="#{ (action.getId() != 'NICE_PRINT_DOSSIER') and (action.getId() != 'CSV_PRINT_DOSSIER')}">
									<td class="enabledButtonContainer"><a
										href="#{action.getLink()}"> <h:graphicImage
												value="#{action.getIcon()}" alt="#{action.getLabel()}"
												title="#{action.getLabel()}"
												rendered="#{action.id == 'PRINT_DOSSIER'  or (action.id == 'EMAIL_FORWARD_DOSSIER')}" />
									</a> <nxh:commandLink action="#{action.getLink()}"
											onclick="#{action.getConfirm()}">
											<h:graphicImage value="#{action.getIcon()}"
												alt="#{messages[action.getLabel()]}"
												title="#{messages[action.getLabel()]}"
												rendered="#{action.id != 'PRINT_DOSSIER' and (action.id != 'EMAIL_FORWARD_DOSSIER')}" />
										</nxh:commandLink></td>
								</f:subview>
							</nxu:dataList>
						</nxu:set>

						<nxu:set var="actions"
							value="#{webActions.getActionsList('DOSSIER_TOPBAR_ACTIONS_FDR')}"
							cache="true">
							<nxu:dataList id="fdrActionsTable" layout="simple" var="action"
								value="#{actions}">
								<c:if test="#{not isInEdition}">
									<td class="enabledButtonContainer"><nxu:set
											var="buttonLabel"
											value="#{dossierDistributionActions.getActionFeuilleRouteButtonLabel(action.getLabel())}">
											<h:outputLink value="#" onclick="#{action.getLink()}"
												rendered="#{!(fn:startsWith(action.link,'#'))}">
												<h:graphicImage value="#{action.getIcon()}"
													alt="#{buttonLabel}" title="#{buttonLabel}" />
											</h:outputLink>
											<nxh:commandButton action="#{action.getLink()}"
												onclick="#{action.getConfirm()}"
												rendered="#{fn:startsWith(action.link,'#')}"
												image="#{action.getIcon()}" alt="#{buttonLabel}"
												title="#{buttonLabel}" />
										</nxu:set></td>
								</c:if>
							</nxu:dataList>
						</nxu:set>
					</tr>
				</table>

				<table class="dossierActions" style="margin-right: 60px;">
					<tr>
						<!-- Bouton de sauvegarde du bordereau -->
						<c:if
							test="#{webActions.currentTabAction eq 'TAB_DOSSIER_BORDEREAU' and (isBordereauUpdatable or hasRightModifCE or isIndexationUpdatable or isBordereauActiviteNormativeUpdatable)}">
							<td class="enabledButtonContainer"><a href="#"
								onclick="if(typeof jsfcljs == 'function'){jsfcljs(document.getElementById('bordereauForm'),{'bordereauForm:idSaveBordereauButton':'bordereauForm:idSaveBordereauButton'},'');}return false">
									<h:graphicImage value="/img/icons/disk_blue.png"
										title="Sauvegarder le bordereau" />
							</a></td>
						</c:if>

						<!-- Bouton de sauvegarde du traitement papier -->
						<c:if
							test="#{webActions.currentTabAction eq 'TAB_PAPIER' and dossierLockActions.getCanUnlockCurrentDossier() and papierActions.canCurrentUserWrite()}">
							<td class="enabledButtonContainer"><a href="#"
								onclick="if(typeof jsfcljs == 'function'){jsfcljs(document.getElementById('papierForm'),{'papierForm:idSavePapierButton':'papierForm:idSavePapierButton'},'');}return false">
									<h:graphicImage value="/img/icons/disk_blue.png"
										title="#{messages['label.epg.papier.save.title']}" />
							</a></td>
						</c:if>

						<!-- Actions sur le dossier -->
						<nxu:set var="actions"
							value="#{webActions.getActionsList('DOSSIER_TOPBAR_ACTIONS_LOCKS')}"
							cache="true">
							<nxu:dataList id="dossierActionsLockTable" layout="simple"
								var="action" value="#{actions}" rowIndexVar="row"
								rowCountVar="rowCount">

								<!-- ARL -->
								<f:subview rendered="#{action.getId() == 'DOSSIER_PUBLIE'}">
									<td class="enabledButtonContainer"><h:commandLink
											immediate="true" action="#{action.getLink()}">
											<h:graphicImage value="#{action.getIcon()}"
												alt="#{action.getLabel()}" title="#{action.getLabel()}" />
										</h:commandLink></td>
								</f:subview>
								<!-- *** -->

								<!-- ARL -->
								<f:subview rendered="#{action.getId() != 'DOSSIER_PUBLIE'}">
									<!-- *** -->

									<td class="enabledButtonContainer"><nxh:commandLink
											action="#{action.getLink()}" onclick="#{action.confirm}">
											<h:graphicImage value="#{action.getIcon()}"
												alt="#{messages[action.getLabel()]}"
												title="#{messages[action.getLabel()]}" />
										</nxh:commandLink></td>

									<!-- ARL -->
								</f:subview>
								<!-- *** -->
							</nxu:dataList>
							<c:if test="#{stLockActions.getCurrentLockOwnerName() ne ''}">
								<td><h:graphicImage value="/img/icons/lock_16.png" /> <h:outputText
										value="Verrouillé le #{stLockActions.getCurrentLockTime()}, par #{stLockActions.getCurrentLockOwnerInfo()}" />
								</td>
							</c:if>
						</nxu:set>
					</tr>
				</table>
			</nxu:set>
		</nxu:set>

		<ui:include
			src="/dossier/distribution/valider_non_concerne_panel.xhtml" />

		<c:if test="#{retourModificationPopup}">
			<!-- Réinitialise le panneau au premier affichage -->
      #{dossierDistributionActions.setRetourModificationPopup(false)}
      <ui:include
				src="/dossier/distribution/valider_retour_modification_panel.xhtml" />
		</c:if>
	</h:form>
	<ui:include
			src="/dossier/distribution/valider_retour_modification_choix_panel.xhtml" />
	<ui:include src="/casemanagement/caseitem/mail_dossier_panel.xhtml" />
	<ui:include src="/casemanagement/caseitem/texte_signale_popup.xhtml" />

	<script type="text/javascript">
	  var j = jQuery.noConflict();
	  var isDossierModified = false;
	  j(document).ready(function() {
	    j('.tabsBar a').click(function(event) {
	  		event.preventDefault();
	    	return dossierModifiedHref(this);
	    });
	  });

	  function dossierModifiedHref(element) {
	 	  if(isDossierModified) {
	        return displayConfirmDossierModified(event, "#{messages['action.tab.change.confirm']}");
		  }else{
			parent.location=element.href;
		  	return true;
		  }
	  }

	  function dossierModifiedLock() {
	 	  if(isDossierModified) {
	 		 return displayConfirmDossierModified(event, "#{messages['action.unlock.confirm']}");
		  }else{
		  	return true;
		  }
	  }
	//<![CDATA[

	  function displayConfirmDossierModified(event, msg){
			if(event == null || msg == null){
				return confirm(event);
			}
			if(event.altKey && event.ctrlKey){
			  	return true;
			}else{
				var srcElt = event.srcElement;
				jConfirm(msg, 'Confirmation', function(r) {
			  		if(r){
				  		// set back value of isDossierModified to false when confirmed
			  			 isDossierModified = false;
				  		 if (event.initMouseEvent) {     // all browsers except IE before version 9
				             var clickEvent = document.createEvent("MouseEvent");
				             clickEvent.initMouseEvent("click", true, true, window, 0, 
				            		 					event.screenX, event.screenY, event.clientX, event.clientY, 
				                                        true, true, event.shiftKey, event.metaKey, 
				                                        0, null);
				             event.target.dispatchEvent(clickEvent);
				         } else {
				             if (document.createEventObject) {   // IE before version 9
				                 var clickEvent = document.createEventObject(event);
				                 clickEvent.altKey = true;
				                 clickEvent.ctrlKey = true;
				                 clickEvent.srcElement = srcElt;
				                 srcElt.fireEvent("onclick", clickEvent);
				             }
				         }
			  		}
			  	});
				return false;
			}
		  }

	//]]>
	  </script>
</div>
