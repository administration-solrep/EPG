--------------------------------------------------------
--  APPLIQUE TOUTES LES MODIFICATIONS EFFECTUEES DEPUIS LA VERSION 1.10
--------------------------------------------------------

--------------------------------------------------------
--  VERSION 1.10
--------------------------------------------------------

--------------------------------------------------------
--  create table mgpp
--------------------------------------------------------

--------------------------------------------------------
--  DDL for Table FICHE_PRESENTATION_AN
--------------------------------------------------------

spool complement_suite.log

CREATE TABLE "FICHE_PRESENTATION_AN" 
   (	"ID" VARCHAR2(36 BYTE), 
	"DATEAUDITIONSE" TIMESTAMP (6), 
	"NOMINE" NVARCHAR2(2000), 
	"DATEAUDITIONAN" TIMESTAMP (6), 
	"IDORGANISMEEPP" NVARCHAR2(2000), 
	"DATEFINMANDAT" TIMESTAMP (6), 
	"NOMORGANISME" NVARCHAR2(2000), 
	"DATE" TIMESTAMP (6), 
	"IDDOSSIER" NVARCHAR2(2000), 
	"BASELEGALE" NVARCHAR2(2000)
   ) ;
 

--------------------------------------------------------
--  Constraints for Table FICHE_PRESENTATION_AN
--------------------------------------------------------

  ALTER TABLE "FICHE_PRESENTATION_AN" ADD CONSTRAINT "FICHE_PRESENTATION_AN_PK" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "FICHE_PRESENTATION_AN" MODIFY ("ID" NOT NULL ENABLE);
 

--------------------------------------------------------
--  Ref Constraints for Table FICHE_PRESENTATION_AN
--------------------------------------------------------

  ALTER TABLE "FICHE_PRESENTATION_AN" ADD CONSTRAINT "FICH_713449CA_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE;
	  

--------------------------------------------------------
--  DDL for Table FICHE_PRESENTATION_DECRET
--------------------------------------------------------

  CREATE TABLE "FICHE_PRESENTATION_DECRET" 
   (	"ID" VARCHAR2(36 BYTE), 
	"NORPUBLICATION" NVARCHAR2(2000), 
	"URLPUBLICATION" NVARCHAR2(2000), 
	"NOR" NVARCHAR2(2000), 
	"NUMEROACTE" NVARCHAR2(2000), 
	"PAGEJO" NVARCHAR2(2000), 
	"RUBRIQUE" NVARCHAR2(2000), 
	"INTITULE" NVARCHAR2(2000), 
	"DATE" TIMESTAMP (6), 
	"OBJET" NVARCHAR2(2000), 
	"NUMJO" NVARCHAR2(2000), 
	"DATEJO" TIMESTAMP (6)
   ) ;
 

--------------------------------------------------------
--  Constraints for Table FICHE_PRESENTATION_DECRET
--------------------------------------------------------

  ALTER TABLE "FICHE_PRESENTATION_DECRET" ADD CONSTRAINT "FICHE_PRESENTATION_DECRET_PK" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "FICHE_PRESENTATION_DECRET" MODIFY ("ID" NOT NULL ENABLE);
 

--------------------------------------------------------
--  Ref Constraints for Table FICHE_PRESENTATION_DECRET
--------------------------------------------------------

  ALTER TABLE "FICHE_PRESENTATION_DECRET" ADD CONSTRAINT "FICH_7685C8A0_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE;
 

 alter table NXP_LOGS_MAPEXTINFOS drop constraint FKF96F609C4EA9779;
  ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD CONSTRAINT "FKF96F609C4EA9779" FOREIGN KEY ("INFO_FK")
	  REFERENCES "NXP_LOGS_EXTINFO" ("LOG_EXTINFO_ID") ENABLE;
 
alter table NXP_LOGS_MAPEXTINFOS drop constraint FKF96F609E7AC49AA;
  ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD CONSTRAINT "FKF96F609E7AC49AA" FOREIGN KEY ("LOG_FK")
	  REFERENCES "NXP_LOGS" ("LOG_ID") ENABLE;
	  
	  
	  --------------------------------------------------------
--  DDL for Index FICHE_PRESENTATION_AN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FICHE_PRESENTATION_AN_PK" ON "FICHE_PRESENTATION_AN" ("ID") 
  ;
 
  --------------------------------------------------------
--  DDL for Index FICHE_PRESENTATION_DECRET_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FICHE_PRESENTATION_DECRET_PK" ON "FICHE_PRESENTATION_DECRET" ("ID") 
  ;
  
--------------------------------------------------------
--  create index
--------------------------------------------------------

 --== DOSSIER_SOLON_EPG ==--
CREATE UNIQUE INDEX IDX_DOSSIER_SOLON_EPG_1 ON DOSSIER_SOLON_EPG(NUMERONOR);

--------------------------------------------------------
--  update activite normative
--------------------------------------------------------

UPDATE TEXTE_MAITRE SET APPLICATIONDIRECTE = 0;

--------------------------------------------------------
--  VERSION 1.11
--------------------------------------------------------

/* Ajout de la colonne dateTranspositionEffective de type xs:date */

ALTER TABLE TEXTE_MAITRE ADD DATETRANSPOSITIONEFFECTIVE TIMESTAMP(6);

/* Nettoyage des dossiers dans les textes signal√©s */

UPDATE DOSSIER_SOLON_EPG SET DATEVERSEMENTTS = NULL;

/* Ajout de la colonne type_ts de type xs:string */
ALTER TABLE TEXTE_SIGNALE ADD TYPE_TS VARCHAR2(1);

/* Update des vues*/

CREATE OR REPLACE VIEW V_BORDEREAU_SIGNATURE_LISTE  AS
SELECT DOS.MINISTERERESP, 
        DOS.NUMERONOR,
        LISTE.TYPELISTE,
        LISTE.NUMEROLISTE,
        LISTE.DATEGENERATIONLISTE,
        LISTE.TYPESIGNATURE,
        DOS.TITREACTE,
        LISTE.ID
  FROM DOSSIER_SOLON_EPG DOS,LIS_IDSDOSSIER LISDOS,LISTE_TRAITEMENT_PAPI_144E75F6 LISTE
  WHERE DOS.ID=LISDOS.ITEM 
	AND LISDOS.ID=LISTE.ID 
	AND LISTE.TYPELISTE = '1' ;


CREATE OR REPLACE VIEW V_BORDEREAU_AUTRE_LISTE  AS
SELECT DOS.MINISTERERESP, DOS.NUMERONOR, 
       DOS.TITREACTE, 
       TP.PUBLICATIONEPREUVEENRETOUR,
       TP.PUBLICATIONDELAI,
       TP.PUBLICATIONDATEDEMANDE,
       LISTE.TYPELISTE, LISTE.NUMEROLISTE, 
       LISTE.ID,
       TP.ID as DOCID,
       LISTE.DATEGENERATIONLISTE, 
       LISTE.TYPESIGNATURE,
       NVL(VOCPUBTP."label",' ') AS PUBTPLABEL, 
       NVL(VOCMODEPARU."label",' ') AS MODPARULABEL,
       NVL(VOCPUBDEL."label",' ') AS PUBDELAILABEL
  FROM DOSSIER_SOLON_EPG DOS,
       TRAITEMENT_PAPIER TP,
       LIS_IDSDOSSIER LISDOS,
       LISTE_TRAITEMENT_PAPI_144E75F6 LISTE,
       VOC_VECTEUR_PUBLICATION_TP VOCPUBTP,
       VOC_MODE_PARUTION VOCMODEPARU,
       VOC_PUBLICATION_DELAI VOCPUBDEL
 WHERE DOS.ID = TP.ID
   AND DOS.ID = LISDOS.ITEM
   AND LISDOS.ID = LISTE.ID
   AND (LISTE.TYPELISTE = '2' OR LISTE.TYPELISTE = '3')
   AND TP.PUBLICATIONNOMPUBLICATION = VOCPUBTP."id"(+)
   AND TP.PUBLICATIONMODEPUBLICATION = VOCMODEPARU."id"(+)
   AND TP.PUBLICATIONDELAI = VOCPUBDEL."id"(+);

CREATE OR REPLACE VIEW  V_BORDEREAU_COMMUNICATION AS 
SELECT
    1 AS JOIN_ID,
    DOS.ID,
    TP.SIGNATAIRE,    
    DOS.NUMERONOR,
    DOS.TITREACTE,
    TP.PRIORITE,
    NVL(VOCPRIORITE."label",' ') AS PRIORITELABEL,
    NVL(DOS.PRENOMRESPDOSSIER,' ') || ' ' || NVL(DOS.NOMRESPDOSSIER,' ') AS RESPDOSSIER,
    NVL(DOS.TELRESPDOSSIER,' ') AS TELRESPDOSSIER,
    TP.PERSONNESNOMMEES,
	  DOS.TYPEACTE,
	  TP.TEXTESOUMISAVALIDATION,
	  TP.TEXTEAPUBLIER
FROM
    DOSSIER_SOLON_EPG DOS,
    TRAITEMENT_PAPIER TP,
    VOC_PAPIER_PRIORITE  VOCPRIORITE
WHERE DOS.ID = TP.ID
AND	  TP.PRIORITE=VOCPRIORITE."id"(+);

CREATE OR REPLACE VIEW V_BORDEREAU_ENVOI_EPR_RELC AS 
SELECT
	DOS.ID,
	TP.SIGNATAIRE,
	DOS.NUMERONOR,
	DOS.TITREACTE,
	TP.PRIORITE,
	NVL(VOCPRIORITE."label",' ') AS PRIORITELABEL,
	NVL(DOS.PRENOMRESPDOSSIER,' ') || ' ' || NVL(DOS.NOMRESPDOSSIER,' ') AS RESPDOSSIER,
	NVL(DOS.TELRESPDOSSIER,' ') AS TELRESPDOSSIER
FROM 
	DOSSIER_SOLON_EPG DOS,
	TRAITEMENT_PAPIER TP,
	VOC_PAPIER_PRIORITE VOCPRIORITE
WHERE DOS.ID   = TP.ID
AND   TP.PRIORITE=VOCPRIORITE."id"(+);

CREATE OR REPLACE VIEW V_BORDEREU_RETOUR AS 
SELECT  DOS.ID,
        DOS.NUMERONOR, 
        NVL(DOS.TITREACTE,' ') AS TITREACTE, 
        NVL(TP.MOTIFRETOUR,' ') AS MOTIFRETOUR, 
        NVL(TP.RETOURA,' ') AS RETOURA,
        NVL(DOS.PRENOMRESPDOSSIER,' ') || ' ' || NVL(DOS.NOMRESPDOSSIER,' ') AS RESPDOSSIER,
        NVL(DOS.TELRESPDOSSIER,' ') AS TELRESPDOSSIER
FROM DOSSIER_SOLON_EPG DOS,
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID;

--********
--V_STATS
--********

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_COM  AS
SELECT DOS.*
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TP.TEXTESOUMISAVALIDATION = 1
AND   EXISTS ( 	SELECT * 
				FROM HIERARCHY H, DESTINATAIRECOMMUNICATION DES
				WHERE DOS.ID = H.PARENTID
				AND   H.ID = DES.ID 
				AND   DES.DATERETOURCOMMUNICATION IS NULL 
				AND   DES.DATEENVOICOMMUNICATION IS NOT NULL );

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_SIG_PM_PR  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, DONNEESSIGNATAIRE SIG
				WHERE DOS.ID = H.PARENTID
				AND   H.NAME IN ('dos:signaturePm', 'dos:signaturePr')
				AND   H.ID = SIG.ID
				AND   SIG.DATEENVOISIGNATURE IS NOT NULL
				AND   SIG.DATERETOURSIGNATURE IS NULL);

CREATE OR REPLACE VIEW V_STATS_LISTE_EPREUVE_RELEC  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS, 
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND EXISTS (
				SELECT * 
				FROM INFOEPREUVE EPR, HIERARCHY H
				WHERE DOS.ID = H.PARENTID
				AND   H.ID = EPR.ID
				AND   EPR.EPREUVEENVOIRELECTURELE IS NOT NULL
				AND   TP.RETOURDUBONATITRERLE IS NULL );

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_AMPLIATION  AS
SELECT  DOS.ID, 
		DOS.NUMERONOR, 
		DOS.TITREACTE, 
		LISTAGG (AMP.ITEM, ', ') WITHIN GROUP (ORDER BY AMP.ITEM) ITEM
FROM (DOSSIER_SOLON_EPG DOS INNER JOIN TP_AMPLIATIONDESTINATAIREMAILS AMP ON DOS.ID = AMP.ID AND   DOS.STATUTARCHIVAGE IN ('1', '2'))
GROUP BY DOS.ID, DOS.NUMERONOR, DOS.TITREACTE;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_RIG  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS,
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND( 
	EXISTS
	(
		SELECT *
		FROM ACTIONNABLE_CASE_LINK ACT, CASE_LINK CAS, ROUTING_TASK ROU
		WHERE DOS.ID = CAS.CASEDOCUMENTID
		AND   CAS.ID = ACT.ID
		AND   ACT.ROUTINGTASKID = ROU.ID
		AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
		AND   ROU.TYPE = 13
		AND   ACT.CASELIFECYCLESTATE = 'RUNNING'
		AND   DOS.DELAIPUBLICATION = 3
	)
	 OR
	(
		TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY') 
		AND   TP.PUBLICATIONDELAI = 3
	)
);

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_ARRIVE_SGG  AS
SELECT DISTINCT DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.DATEARRIVEPAPIER
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND DOS.ID = TP.ID;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_CORBEILLE  AS
SELECT DISTINCT DOS.*, ROU.DISTRIBUTIONMAILBOXID
FROM DOSSIER_SOLON_EPG DOS, ACTIONNABLE_CASE_LINK ACT, CASE_LINK CAS, ROUTING_TASK ROU
WHERE DOS.ID = CAS.CASEDOCUMENTID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND CAS.ID = ACT.ID
AND ACT.ROUTINGTASKID = ROU.ID
AND ACT.CASELIFECYCLESTATE = 'running';

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_PUB  AS
SELECT DOS.*
FROM DOSSIER_SOLON_EPG DOS
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, ROUTING_TASK ROU
				WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
				AND   H.ID = ROU.ID
				AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
				AND   ROU.TYPE IN (13, 14) );

CREATE OR REPLACE VIEW V_STATS_NOMBRE_ACTE_PAR_TYPE  AS
SELECT DOS.TYPEACTE, DOS.ID, DUB.CREATED DATEDOSSIERCREE
FROM DOSSIER_SOLON_EPG DOS, DUBLINCORE DUB
WHERE DOS.ID = DUB.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2');

CREATE OR REPLACE VIEW V_STATS_NBR_ACTE_TYPE_PERIODE  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, DOS.MINISTERERESP, DOS.DIRECTIONRESP, DOS.MAILRESPDOSSIER, DUB.CREATED DATEDOSSIERCREE
FROM DOSSIER_SOLON_EPG DOS, DUBLINCORE DUB
WHERE DOS.ID = DUB.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2');

CREATE OR REPLACE VIEW V_STATS_LISTE_ACTE_TYPE_15  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, TP.DATERETOUR, ROU.DISTRIBUTIONMAILBOXID
FROM DOSSIER_SOLON_EPG DOS, HIERARCHY H, ROUTING_TASK ROU, TRAITEMENT_PAPIER TP
WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND   H.ID = ROU.ID
AND TP.ID = DOS.ID
AND   ROU.TYPE = 15;

CREATE OR REPLACE VIEW V_STATS_LISTE_ALL_ACTE  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, TP.DATERETOUR
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND DOS.STATUTARCHIVAGE IN ('1', '2');

CREATE OR REPLACE VIEW V_STATS_LISTE_ALL_ACTE_DETAIL  AS
SELECT  DOS.ID ID, 
		DOS.MINISTEREATTACHE MINISTEREATTACHE,  
		TP.DATERETOUR DATERETOUR, 
		H.POS POS, 
		ROU.DISTRIBUTIONMAILBOXID DISTRIBUTIONMAILBOXID, 
		ROU.TYPE TYPE
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, HIERARCHY H, ROUTING_TASK ROU
WHERE DOS.ID = TP.ID
AND   DOS.LASTDOCUMENTROUTE = H.PARENTID
And   Dos.Statutarchivage In ('1', '2')
AND   H.ID = ROU.ID;

--********
--V_AN
--********
CREATE OR REPLACE VIEW V_AN_LOIS_APPELANT_MESURE  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR
FROM (TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 )
WHERE EXISTS
(SELECT * 
 FROM (TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM ON TM_MES.ID = TEXM.ITEM) 
 WHERE TM_MES.TYPEMESURE = '1'
 AND   TM_LOI.ID = TEXM.ID);
 
CREATE OR REPLACE VIEW V_AN_MESURES_APPELANT_DECRET  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE, 
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE, 
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM)
WHERE TM_MES.TYPEMESURE = '1'
AND   TM_LOI.ID = TEXM.ID
AND EXISTS
(SELECT * 
 FROM TEXM_DECRETIDS TEXD
 WHERE TM_MES.ID = TEXD.ID);

CREATE OR REPLACE VIEW V_AN_MESURES_RECU_APPLICATION  AS
SELECT
TM_LOI.ID AS LOI_ID,
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP,
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
TM_DEC.ID AS DECRET_ID,
TM_DEC.DATEPUBLICATION AS DECRET_DATEPUBLICATION,
TM_MES.DATEMISEAPPLICATION AS MES_DATEMISEAPPLICATION,
TM_MES.DATEENTREEENVIGUEUR as MES_DATEENTREEENVIGUEUR,
TM_MES.DIFFERE as MES_DIFFERE
FROM
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = '1' ),
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
        FROM TEXM_MESUREIDS MX_TEXM,
        (TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
        WHERE TM_MES.ID = MX_TEXD.ID
        AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );

CREATE OR REPLACE VIEW V_AN_MESURES_ATTENTE_DECRET  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE, 
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE, 
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU <> '1'
AND EXISTS
  (SELECT * 
  FROM TEXM_DECRETIDS TEXD
  WHERE TM_MES.ID = TEXD.ID);
  
CREATE OR REPLACE VIEW V_AN_MESURES_DELAIS_DERNIER  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
CASE
  WHEN TM_MES.DATEENTREEENVIGUEUR IS NULL 
  THEN TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_LOI.DATEPUBLICATION) day TO second))) / 30) 
  ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_MES.DATEENTREEENVIGUEUR) day TO second))) / 30) 
END DELAIS_EN_MOIS
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MX_TEXM, 
								(TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
								WHERE TM_MES.ID = MX_TEXM.ITEM
								AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_MESURES_DELAIS_PREMIER  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
CASE
  WHEN TM_MES.DATEENTREEENVIGUEUR IS NULL 
  THEN TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_LOI.DATEPUBLICATION) day TO second))) / 30) 
  ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_MES.DATEENTREEENVIGUEUR) day TO second))) / 30) 
END DELAIS_EN_MOIS
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MIN(MN_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MN_TEXM, 
								(TEXTE_MAITRE MN_TM_DEC INNER JOIN TEXM_DECRETIDS MN_TEXD   ON MN_TM_DEC.ID = MN_TEXD.ITEM)
								WHERE TM_MES.ID = MN_TEXM.ITEM
								AND   MN_TEXM.ID = MN_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_MESURES_PUBLIEES  AS
SELECT 
TM_MES.ID AS TM_MESURE_ID,
EXTRACT(DAY FROM TM_DEC.DATEPUBLICATION) AS JOUR_DE_PUBLICATION,
EXTRACT(MONTH FROM TM_DEC.DATEPUBLICATION) AS MOIS_DE_PUBLICATION,
EXTRACT(YEAR FROM TM_DEC.DATEPUBLICATION)  AS ANNEE_DE_PUBLICATION
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MX_TEXM, 
								(TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
								WHERE TM_MES.ID = MX_TEXM.ITEM
								AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_TRANSPOSITION_DIRECTIVE  AS
SELECT 
TM_DIR.NUMERO , TM_DIR.DATEDIRECTIVE, TM_DIR.TITREACTE AS TITRE, TM_DIR.DATEPROCHAINTABAFFICHAGE, TM_DIR.MINISTEREPILOTE AS TD_MINISTEREPILOTE, 
TM_DIR.TABAFFICHAGEMARCHEINT, TM_DIR.ACHEVEE, TM_DIR.OBSERVATION AS TD_OBSERVATION, TM_DIR.DATEECHEANCE,  
VOC."label" AS NATURE, TM_TT.NUMERONOR, TM_TT.MINISTEREPILOTE AS TT_MINISTERE_PILOTE, TM_TT.ETAPESOLON, TM_TT.NUMEROTEXTEPUBLIE,
TM_TT.TITRETEXTEPUBLIE, TM_TT.DATEPUBLICATION
FROM 
((((
 TEXTE_MAITRE TM_DIR 
 INNER JOIN      ACTIVITE_NORMATIVE AN ON TM_DIR.ID = AN.ID AND AN.TRANSPOSITION = 1 ) 
 LEFT OUTER JOIN TEXM_DOSSIERSNOR TEXN ON TM_DIR.ID = TEXN.ID)
 LEFT OUTER JOIN TEXTE_MAITRE TM_TT    ON TEXN.ITEM = TM_TT.NUMERONOR)
 LEFT OUTER JOIN VOC_ACTE_TYPE VOC     ON TM_TT.NATURETEXTE = VOC."id");
 
CREATE OR REPLACE VIEW V_AN_LOI_HAB_ORDONNANCE  AS
SELECT 
TM_RAC.NUMERO AS RAC_NUMERO,
TM_RAC.DATEPUBLICATION AS RAC_DATEPUBLICATION,
TM_RAC.TITREACTE AS RAC_TITREACTE,
TM_HAB.NUMEROORDRE AS HAB_NUMEROORDRE,
TM_HAB.ARTICLE AS HAB_ARTICLE,
TM_HAB.OBJETRIM AS HAB_OBJETRIM,
VOC_THAB."label" AS HAB_LBLTYPEHABILITATION,
TM_HAB.TYPEHABILITATION AS HAB_TYPEHABILITATION,
TM_HAB.MINISTEREPILOTE AS HAB_MINISTEREPILOTE,
TM_HAB.DATESAISINECE AS HAB_DATESAISINECE,
TM_HAB.DATEPREVISIONNELLECM AS HAB_DATEPREVISIONNELLECM,
TM_HAB.LEGISLATURE AS HAB_LEGISLATURE,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.TITREACTE AS ORD_TITREACTE,
TM_ORD.NUMERO AS ORD_NUMERO,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_ORD.TERMEDEPOT AS ORD_TERMEDEPOT, 
TM_ORD.DATETERME AS ORD_DATETERME,
TM_ORD.DATELIMITEDEPOT AS ORD_DATELIMITEDEPOT,
TM_ORD.OBSERVATION  AS ORD_OBSERVATION
FROM 
 TEXTE_MAITRE TM_RAC 
 INNER JOIN      ACTIVITE_NORMATIVE AN      ON TM_RAC.ID  = AN.ID AND AN.ORDONNANCE38C = 1
 LEFT OUTER JOIN TEXM_HABILITATIONIDS TEXH  ON TM_RAC.ID  = TEXH.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_HAB        ON TEXH.ITEM  = TM_HAB.ID 
 	LEFT OUTER JOIN VOC_TYPE_HABILITATION VOC_THAB ON TM_HAB.TYPEHABILITATION = VOC_THAB."id"
 LEFT OUTER JOIN TEXM_ORDONNANCEIDS TEXO    ON TM_HAB.ID  = TEXO.ID  
 LEFT OUTER JOIN TEXTE_MAITRE TM_ORD        ON TEXO.ITEM  = TM_ORD.ID  
ORDER BY TM_RAC.NUMERO, TM_ORD.DATETERME;

CREATE OR REPLACE VIEW V_AN_ORDONNANCE_38  AS
SELECT 
TM_RAC.NUMERO AS RAC_NUMERO,
TM_RAC.TITREACTE AS RAC_TITREACTE,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.MINISTEREPILOTE AS ORD_MINISTEREPILOTE,
TM_ORD.TITREACTE AS ORD_TITREACTE,
TM_ORD.NUMERO AS ORD_NUMERO,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_LRA.DATELIMITEDEPOT AS LRA_DATELIMITEDEPOT,
TM_LRA.CONVENTIONDEPOT AS LRA_CONVENTIONDEPOT,
TM_LRA.NUMERONOR AS LRA_NUMERONOR,
TM_LRA.TITREACTE AS LRA_TITREACTE,
TM_LRA.CHAMBREDEPOT AS LRA_CHAMBREDEPOT,
TM_LRA.DATEDEPOT AS LRA_DATEDEPOT,
TM_LRA.NUMERODEPOT AS LRA_NUMERODEPOT,
TM_LRA.TITREOFFICIEL AS LRA_TITREOFFICIEL,
TM_LRA.DATEPUBLICATION AS LRA_DATEPUBLICATION
FROM 
 (TEXTE_MAITRE TM_ORD 
 INNER JOIN      ACTIVITE_NORMATIVE AN      ON TM_ORD.ID  = AN.ID AND AN.ORDONNANCE = 1 AND  TM_ORD.DISPOSITIONHABILITATION = 1)
 LEFT OUTER JOIN
 ( SELECT TEXO.ITEM, TM_RAC.* FROM
   TEXM_ORDONNANCEIDS TEXO
   INNER JOIN      TEXTE_MAITRE TM_HAB        ON TEXO.ID    = TM_HAB.ID
   INNER JOIN      TEXM_HABILITATIONIDS TEXH  ON TM_HAB.ID  = TEXH.ITEM
   INNER JOIN      TEXTE_MAITRE TM_RAC        ON TEXH.ID    = TM_RAC.ID ) TM_RAC ON TM_ORD.ID = TM_RAC.ITEM
 LEFT OUTER JOIN   TEXM_LOIRATIFICATIONIDS  TEXL   ON TM_ORD.ID = TEXL.ID
 LEFT OUTER JOIN   TEXTE_MAITRE TM_LRA             ON TEXL.ITEM = TM_LRA.ID 
 ORDER BY TM_LRA.DATELIMITEDEPOT;

CREATE OR REPLACE VIEW V_AN_ORDONNANCE_74  AS
SELECT 
TM_ORD.MINISTEREPILOTE AS ORD_MINISTEREPILOTE,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.NUMERO AS ORD_NUMERO,
TM_ORD.TITREACTE AS ORD_TITREACTE,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_LRA.DATELIMITEDEPOT AS LRA_DATELIMITEDEPOT,
TM_LRA.NUMERONOR AS LRA_NUMERONOR,
TM_LRA.TITREACTE AS LRA_TITREACTE,
TM_LRA.DATEPUBLICATION AS LRA_DATEPUBLICATION
FROM 
 (TEXTE_MAITRE TM_ORD 
 INNER JOIN      ACTIVITE_NORMATIVE AN         ON TM_ORD.ID  = AN.ID AND AN.ORDONNANCE = 1 AND  TM_ORD.DISPOSITIONHABILITATION = 0)
 LEFT OUTER JOIN TEXM_LOIRATIFICATIONIDS  TEXL ON TM_ORD.ID  = TEXL.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRA           ON TEXL.ITEM  = TM_LRA.ID 
 ORDER BY TM_LRA.DATELIMITEDEPOT;

CREATE OR REPLACE VIEW V_AN_HAB_ORD_LOI  AS
SELECT 
TM_RAC.NUMERONOR AS RAC_NUMERONOR,
TM_RAC.TITREACTE AS RAC_TITREACTE,
TM_RAC.DATEPUBLICATION AS RAC_DATEPUBLICATION,
TM_HAB.NUMEROORDRE AS HAB_NUMEROORDRE,
TM_HAB.ARTICLE AS HAB_ARTICLE,
TM_HAB.OBJETRIM AS HAB_OBJETRIM,
VOC_THAB."label" AS HAB_TYPEHABILITATION,
TM_HAB.MINISTEREPILOTE AS HAB_MINISTEREPILOTE,
TM_HAB.DATETERME AS HAB_DATETERME,
TM_HAB.CONVENTIONDEPOT AS HAB_CONVENTIONDEPOT,
TM_HAB.DATESAISINECE AS HAB_DATESAISINECE,
TM_HAB.DATEPREVISIONNELLECM AS HAB_DATEPREVISIONNELLECM,
TM_HAB.OBSERVATION AS HAB_OBSERVATION,
TM_HAB.CODIFICATION AS HAB_CODIFICATION,
TM_HAB.LEGISLATURE AS HAB_LEGISLATURE,
TM_ORD.DISPOSITIONHABILITATION AS ORD_DISPOSITIONHABILITATION,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.MINISTEREPILOTE AS ORD_MINISTEREPILOTE,
TM_ORD.DATESAISINECE AS ORD_DATESAISINECE,
TM_ORD.DATEPREVISIONNELLECM AS ORD_DATEPREVISIONNELLECM,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_ORD.TITREOFFICIEL AS ORD_TITREOFFICIEL,
TM_ORD.CONVENTIONDEPOT AS ORD_CONVENTIONDEPOT,
TM_ORD.DATELIMITEDEPOT AS ORD_DATELIMITEDEPOT,
TM_LRA.NUMERONOR AS LRA_NUMERONOR,
TM_LRA.TITREACTE AS LRA_TITREACTE,
TM_LRA.DATESAISINECE AS LRA_DATESAISINECE,
TM_LRA.DATEEXAMENCE AS LRA_DATEEXAMENCE,
TM_LRA.SECTIONCE AS LRA_SECTIONCE,
TM_LRA.DATEEXAMENCM AS LRA_DATEEXAMENCM,
TM_LRA.CHAMBREDEPOT AS LRA_CHAMBREDEPOT,
TM_LRA.DATEDEPOT AS LRA_DATEDEPOT,
TM_LRA.NUMERODEPOT AS LRA_NUMERODEPOT,
TM_LRA.TITREOFFICIEL AS LRA_TITREOFFICIEL,
TM_LRA.DATEPUBLICATION AS LRA_DATEPUBLICATION,
TM_LRA.NUMEROJOPUBLICATION AS LRA_NUMEROJOPUBLICATION
FROM 
 TEXTE_MAITRE TM_RAC 
 INNER JOIN      ACTIVITE_NORMATIVE AN        ON TM_RAC.ID  = AN.ID AND AN.ORDONNANCE38C = 1
 LEFT OUTER JOIN TEXM_HABILITATIONIDS TEXH    ON TM_RAC.ID  = TEXH.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_HAB          ON TEXH.ITEM  = TM_HAB.ID 
	LEFT OUTER JOIN VOC_TYPE_HABILITATION VOC_THAB ON TM_HAB.TYPEHABILITATION = VOC_THAB."id"
 LEFT OUTER JOIN TEXM_ORDONNANCEIDS TEXO      ON TM_HAB.ID  = TEXO.ID  
 LEFT OUTER JOIN TEXTE_MAITRE TM_ORD          ON TEXO.ITEM  = TM_ORD.ID  
 LEFT OUTER JOIN TEXM_LOIRATIFICATIONIDS TEXL ON TM_ORD.ID  = TEXL.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRA          ON TEXL.ITEM  = TM_LRA.ID 
ORDER BY TM_RAC.NUMERO, TM_ORD.DATETERME;

CREATE OR REPLACE VIEW V_AN_TRAITE_ACCORD  AS
SELECT
TM_TRAIT.CATEGORIE AS TRAIT_CATEGORIE,
TM_TRAIT.ORGANISATION AS TRAIT_ORGANISATION,
TM_TRAIT.THEMATIQUE AS TRAIT_THEMATIQUE,
TM_TRAIT.DEGREPRIORITE AS TRAIT_DEGREPRIORITE,
TM_TRAIT.TITREACTE AS TRAIT_TITREACTE,
TM_TRAIT.DATESIGNATURE AS TRAIT_DATESIGNATURE,
TM_TRAIT.DATEENTREEENVIGUEUR AS TRAIT_DATEENTREEENVIGUEUR,
TM_TRAIT.MINISTEREPILOTE AS TRAIT_MINISTEREPILOTE,
TM_TRAIT.DATEPJL AS TRAIT_DATEPJL,
TM_TRAIT.DISPOETUDEIMPACT AS TRAIT_DISPOETUDEIMPACT,
TM_TRAIT.DATEDEPOTRATIFICATION AS TRAIT_DATEDEPOTRATIFICATION,
TM_TRAIT.AUTORISATIONRATIFICATION AS TRAIT_AUTORISATIONRATIFICATION,
TM_LRAT.NUMERONOR AS LRAT_NUMERONOR,
TM_LRAT.ETAPESOLON AS LRAT_ETAPESOLON,
TM_LRAT.DATEPUBLICATION AS LRAT_DATEPUBLICATION,
TM_LRAT.TITREACTE AS LRAT_TITREACTE,
TM_TRAIT.NUMERONOR AS DECRET_NUMERONOR,
TM_TRAIT.ETAPESOLON AS DECRET_ETAPESOLON,
TM_TRAIT.NUMERO AS DECRET_NUMERO,
TM_TRAIT.DATEPUBLICATION AS DECRET_DATEPUBLICATION,
TM_TRAIT.TITREACTE AS DECRET_TITREACTE,
TM_TRAIT.OBSERVATION AS DECRET_OBSERVATION
FROM 
 TEXTE_MAITRE TM_TRAIT 
 INNER JOIN      ACTIVITE_NORMATIVE AN ON TM_TRAIT.ID = AN.ID AND AN.TRAITE = 1 
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRAT  ON TM_TRAIT.NORLOIRATIFICATION = TM_LRAT.NUMERONOR;
 
CREATE OR REPLACE VIEW V_AN_TRAITE_ACCORD  AS
SELECT
TM_TRAIT.ID AS TRAIT_ID,
TM_TRAIT.CATEGORIE AS TRAIT_CATEGORIE,
TM_TRAIT.ORGANISATION AS TRAIT_ORGANISATION,
TM_TRAIT.THEMATIQUE AS TRAIT_THEMATIQUE,
TM_TRAIT.DEGREPRIORITE AS TRAIT_DEGREPRIORITE,
TM_TRAIT.TITREACTE AS TRAIT_TITREACTE,
TM_TRAIT.DATESIGNATURE AS TRAIT_DATESIGNATURE,
TM_TRAIT.DATEENTREEENVIGUEUR AS TRAIT_DATEENTREEENVIGUEUR,
TM_TRAIT.MINISTEREPILOTE AS TRAIT_MINISTEREPILOTE,
TM_TRAIT.DATEPJL AS TRAIT_DATEPJL,
TM_TRAIT.DISPOETUDEIMPACT AS TRAIT_DISPOETUDEIMPACT,
TM_TRAIT.ETUDEIMPACT AS TRAIT_ETUDEIMPACT,
TM_TRAIT.DATEDEPOTRATIFICATION AS TRAIT_DATEDEPOTRATIFICATION,
TM_TRAIT.AUTORISATIONRATIFICATION AS TRAIT_AUTORISATIONRATIFICATION,
TM_LRAT.ID AS LRAT_ID,
TM_LRAT.NUMERONOR AS LRAT_NUMERONOR,
TM_LRAT.ETAPESOLON AS LRAT_ETAPESOLON,
TM_LRAT.DATEPUBLICATION AS LRAT_DATEPUBLICATION,
TM_LRAT.TITREACTE AS LRAT_TITREACTE,
TM_TRAIT.NUMERONOR AS DECRET_NUMERONOR,
TM_TRAIT.ETAPESOLON AS DECRET_ETAPESOLON,
TM_TRAIT.NUMERO AS DECRET_NUMERO,
TM_TRAIT.DATEPUBLICATION AS DECRET_DATEPUBLICATION,
TM_TRAIT.TITREACTE AS DECRET_TITREACTE,
TM_TRAIT.OBSERVATION AS DECRET_OBSERVATION
FROM 
 TEXTE_MAITRE TM_TRAIT 
 INNER JOIN      ACTIVITE_NORMATIVE AN ON TM_TRAIT.ID = AN.ID AND AN.TRAITE = 1 
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRAT  ON TM_TRAIT.NORLOIRATIFICATION = TM_LRAT.NUMERONOR;

--------------------------------------------------------
--  VERSION 1.12
--------------------------------------------------------

--------------------------------------------------------
--  update route acl
--------------------------------------------------------

DELETE FROM ACLS WHERE ID IN (SELECT h1.ID FROM hierarchy h1, hierarchy h2 WHERE h1.primarytype = 'FeuilleRoute' AND h1.parentid != h2.id AND h2.name = 'modele-route');

DELETE FROM ACLS a WHERE a.ID IN (SELECT h.id FROM hierarchy h where h.primarytype = 'DocumentRouteInstancesRoot') AND a."USER" IN ('administrators', 'routeManagers');

UPDATE ACLS a SET a."GRANT" = 1, a.POS=0 WHERE a.ID IN (SELECT h.id FROM hierarchy h where h.primarytype = 'DocumentRouteInstancesRoot') AND a."USER" IN ('Everyone');

COMMIT;

--------------------------------------------------------
--  maj vues 
--------------------------------------------------------

/*Correction pour le rapport du nombre d'acte dans statitique*/

CREATE OR REPLACE VIEW V_STATS_NBR_ACTE_TYPE_PERIODE  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, DOS.MINISTERERESP, DOS.DIRECTIONRESP, DOS.MAILRESPDOSSIER, DUB.CREATED DATEDOSSIERCREE
FROM DOSSIER_SOLON_EPG DOS, DUBLINCORE DUB
WHERE DOS.ID = DUB.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2');


/*Ajouter dossier traitement papier, delai de publication et mode parution*/
CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_PUB  AS
SELECT '0' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, DOS.DELAIPUBLICATION, RD.MODEPARUTION,
  NVL(VMP."label",' ') AS DELAIPUBLICATIONLABEL,
  NVL(VPD."label",' ') AS MODEPARUTIONLABEL
FROM DOSSIER_SOLON_EPG DOS, RETOUR_DILA RD, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND VMP."id" = RD.MODEPARUTION
AND VPD."id" = DOS.DELAIPUBLICATION
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, ROUTING_TASK ROU
				WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
				AND   H.ID = ROU.ID
				AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
				AND   ROU.TYPE IN (13, 14) )
UNION
SELECT '1' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.PUBLICATIONDELAI DELAIPUBLICATION, TP.PUBLICATIONMODEPUBLICATION MODEPARUTION,
  NVL(VMP."label",' ') AS DELAIPUBLICATIONLABEL,
  NVL(VPD."label",' ') AS MODEPARUTIONLABEL
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
AND VMP."id" = TP.PUBLICATIONMODEPUBLICATION
AND VPD."id" = TP.PUBLICATIONDELAI
AND DOS.ID = TP.ID;


/*Correction pour la statistique du taux d'execution des lois */
CREATE OR REPLACE VIEW V_AN_MESURES_APPELANT_DECRET  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE, 
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE, 
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM)
WHERE TM_MES.TYPEMESURE = '1'
AND   TM_LOI.ID = TEXM.ID;

CREATE OR REPLACE VIEW V_AN_MESURES_ATTENTE_DECRET  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE, 
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE, 
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU <> '1';

--------------------------------------------------------
--  VERSION 1.13
--------------------------------------------------------

--------------------------------------------------------
--  UPDATE VIEWS :
--------------------------------------------------------
CREATE OR REPLACE VIEW V_BORDEREAU_SIGNATURE_LISTE  AS
SELECT DOS.MINISTERERESP, 
        DOS.NUMERONOR,
        LISTE.TYPELISTE,
        LISTE.NUMEROLISTE,
        LISTE.DATEGENERATIONLISTE,
        LISTE.TYPESIGNATURE,
        DOS.TITREACTE,
        LISTE.ID
  FROM DOSSIER_SOLON_EPG DOS,LIS_IDSDOSSIER LISDOS,LISTE_TRAITEMENT_PAPI_144E75F6 LISTE
  WHERE DOS.ID=LISDOS.ITEM 
	AND LISDOS.ID=LISTE.ID 
	AND LISTE.TYPELISTE = '1' ;


CREATE OR REPLACE VIEW V_BORDEREAU_AUTRE_LISTE  AS
SELECT DOS.MINISTERERESP, DOS.NUMERONOR, 
       DOS.TITREACTE, 
       TP.PUBLICATIONEPREUVEENRETOUR,
       TP.PUBLICATIONDELAI,
       TP.PUBLICATIONDATEDEMANDE,
       LISTE.TYPELISTE, LISTE.NUMEROLISTE, 
       LISTE.ID,
       TP.ID as DOCID,
       LISTE.DATEGENERATIONLISTE, 
       LISTE.TYPESIGNATURE,
       NVL(VOCPUBTP."label",' ') AS PUBTPLABEL, 
       NVL(VOCMODEPARU."label",' ') AS MODPARULABEL,
       NVL(VOCPUBDEL."label",' ') AS PUBDELAILABEL
  FROM DOSSIER_SOLON_EPG DOS,
       TRAITEMENT_PAPIER TP,
       LIS_IDSDOSSIER LISDOS,
       LISTE_TRAITEMENT_PAPI_144E75F6 LISTE,
       VOC_VECTEUR_PUBLICATION_TP VOCPUBTP,
       VOC_MODE_PARUTION VOCMODEPARU,
       VOC_PUBLICATION_DELAI VOCPUBDEL
 WHERE DOS.ID = TP.ID
   AND DOS.ID = LISDOS.ITEM
   AND LISDOS.ID = LISTE.ID
   AND (LISTE.TYPELISTE = '2' OR LISTE.TYPELISTE = '3')
   AND TP.PUBLICATIONNOMPUBLICATION = VOCPUBTP."id"(+)
   AND TP.PUBLICATIONMODEPUBLICATION = VOCMODEPARU."id"(+)
   AND TP.PUBLICATIONDELAI = VOCPUBDEL."id"(+);

CREATE OR REPLACE VIEW  V_BORDEREAU_COMMUNICATION AS 
SELECT
    1 AS JOIN_ID,
    DOS.ID,
    TP.SIGNATAIRE,    
    DOS.NUMERONOR,
    DOS.TITREACTE,
    TP.PRIORITE,
    NVL(VOCPRIORITE."label",' ') AS PRIORITELABEL,
    NVL(DOS.PRENOMRESPDOSSIER,' ') || ' ' || NVL(DOS.NOMRESPDOSSIER,' ') AS RESPDOSSIER,
    NVL(DOS.TELRESPDOSSIER,' ') AS TELRESPDOSSIER,
    TP.PERSONNESNOMMEES,
	  DOS.TYPEACTE,
	  TP.TEXTESOUMISAVALIDATION,
	  TP.TEXTEAPUBLIER
FROM
    DOSSIER_SOLON_EPG DOS,
    TRAITEMENT_PAPIER TP,
    VOC_PAPIER_PRIORITE  VOCPRIORITE
WHERE DOS.ID = TP.ID
AND	  TP.PRIORITE=VOCPRIORITE."id"(+);

CREATE OR REPLACE VIEW V_BORDEREAU_ENVOI_EPR_RELC AS 
SELECT
	DOS.ID,
	TP.SIGNATAIRE,
	DOS.NUMERONOR,
	DOS.TITREACTE,
	TP.PRIORITE,
	NVL(VOCPRIORITE."label",' ') AS PRIORITELABEL,
	NVL(DOS.PRENOMRESPDOSSIER,' ') || ' ' || NVL(DOS.NOMRESPDOSSIER,' ') AS RESPDOSSIER,
	NVL(DOS.TELRESPDOSSIER,' ') AS TELRESPDOSSIER
FROM 
	DOSSIER_SOLON_EPG DOS,
	TRAITEMENT_PAPIER TP,
	VOC_PAPIER_PRIORITE VOCPRIORITE
WHERE DOS.ID   = TP.ID
AND   TP.PRIORITE=VOCPRIORITE."id"(+);

CREATE OR REPLACE VIEW V_BORDEREU_RETOUR AS 
SELECT  DOS.ID,
        DOS.NUMERONOR, 
        NVL(DOS.TITREACTE,' ') AS TITREACTE, 
        NVL(TP.MOTIFRETOUR,' ') AS MOTIFRETOUR, 
        NVL(TP.RETOURA,' ') AS RETOURA,
        NVL(DOS.PRENOMRESPDOSSIER,' ') || ' ' || NVL(DOS.NOMRESPDOSSIER,' ') AS RESPDOSSIER,
        NVL(DOS.TELRESPDOSSIER,' ') AS TELRESPDOSSIER
FROM DOSSIER_SOLON_EPG DOS,
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID;

--********
--V_STATS
--********

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_COM  AS
SELECT DOS.*
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TP.TEXTESOUMISAVALIDATION = 1
AND   EXISTS ( 	SELECT * 
				FROM HIERARCHY H, DESTINATAIRECOMMUNICATION DES
				WHERE DOS.ID = H.PARENTID
				AND   H.ID = DES.ID 
				AND   DES.DATERETOURCOMMUNICATION IS NULL 
				AND   DES.DATEENVOICOMMUNICATION IS NOT NULL );

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_SIG_PM_PR  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, DONNEESSIGNATAIRE SIG
				WHERE DOS.ID = H.PARENTID
				AND   H.NAME IN ('dos:signaturePm', 'dos:signaturePr')
				AND   H.ID = SIG.ID
				AND   SIG.DATEENVOISIGNATURE IS NOT NULL
				AND   SIG.DATERETOURSIGNATURE IS NULL);

CREATE OR REPLACE VIEW V_STATS_LISTE_EPREUVE_RELEC  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS, 
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND EXISTS (
				SELECT * 
				FROM INFOEPREUVE EPR, HIERARCHY H
				WHERE DOS.ID = H.PARENTID
				AND   H.ID = EPR.ID
				AND   EPR.EPREUVEENVOIRELECTURELE IS NOT NULL
				AND   TP.RETOURDUBONATITRERLE IS NULL );

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_AMPLIATION  AS
SELECT  DOS.ID, 
		DOS.NUMERONOR, 
		DOS.TITREACTE, 
		LISTAGG (AMP.ITEM, ', ') WITHIN GROUP (ORDER BY AMP.ITEM) ITEM
FROM (DOSSIER_SOLON_EPG DOS INNER JOIN TP_AMPLIATIONDESTINATAIREMAILS AMP ON DOS.ID = AMP.ID AND   DOS.STATUTARCHIVAGE IN ('1', '2'))
GROUP BY DOS.ID, DOS.NUMERONOR, DOS.TITREACTE;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_RIG  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS,
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND( 
	EXISTS
	(
		SELECT *
		FROM ACTIONNABLE_CASE_LINK ACT, CASE_LINK CAS, ROUTING_TASK ROU
		WHERE DOS.ID = CAS.CASEDOCUMENTID
		AND   CAS.ID = ACT.ID
		AND   ACT.ROUTINGTASKID = ROU.ID
		AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
		AND   ROU.TYPE = 13
		AND   ACT.CASELIFECYCLESTATE = 'RUNNING'
		AND   DOS.DELAIPUBLICATION = 3
	)
	 OR
	(
		TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY') 
		AND   TP.PUBLICATIONDELAI = 3
	)
);

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_ARRIVE_SGG  AS
SELECT DISTINCT DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.DATEARRIVEPAPIER
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND DOS.ID = TP.ID;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_CORBEILLE  AS
SELECT DISTINCT DOS.*, ROU.DISTRIBUTIONMAILBOXID
FROM DOSSIER_SOLON_EPG DOS, ACTIONNABLE_CASE_LINK ACT, CASE_LINK CAS, ROUTING_TASK ROU
WHERE DOS.ID = CAS.CASEDOCUMENTID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND CAS.ID = ACT.ID
AND ACT.ROUTINGTASKID = ROU.ID
AND ACT.CASELIFECYCLESTATE = 'running';

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_PUB  AS
SELECT '0' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, DOS.DELAIPUBLICATION, RD.MODEPARUTION,
  NVL(VMP."label",' ') AS DELAIPUBLICATIONLABEL,
  NVL(VPD."label",' ') AS MODEPARUTIONLABEL
FROM DOSSIER_SOLON_EPG DOS, RETOUR_DILA RD, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND VMP."id" = RD.MODEPARUTION
AND VPD."id" = DOS.DELAIPUBLICATION
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, ROUTING_TASK ROU
				WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
				AND   H.ID = ROU.ID
				AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
				AND   ROU.TYPE IN (13, 14) )
UNION
SELECT '1' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.PUBLICATIONDELAI DELAIPUBLICATION, TP.PUBLICATIONMODEPUBLICATION MODEPARUTION,
  NVL(VMP."label",' ') AS DELAIPUBLICATIONLABEL,
  NVL(VPD."label",' ') AS MODEPARUTIONLABEL
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
AND VMP."id" = TP.PUBLICATIONMODEPUBLICATION
AND VPD."id" = TP.PUBLICATIONDELAI
AND DOS.ID = TP.ID;

CREATE OR REPLACE VIEW V_STATS_NBR_ACTE_TYPE_PERIODE  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, DOS.MINISTERERESP, DOS.DIRECTIONRESP, DOS.POSTECREATOR, DUB.CREATED DATEDOSSIERCREE
FROM DOSSIER_SOLON_EPG DOS, DUBLINCORE DUB
WHERE DOS.ID = DUB.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2');

CREATE OR REPLACE VIEW V_STATS_LISTE_ACTE_TYPE_15  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, TP.DATERETOUR, ROU.DISTRIBUTIONMAILBOXID
FROM DOSSIER_SOLON_EPG DOS, HIERARCHY H, ROUTING_TASK ROU, TRAITEMENT_PAPIER TP
WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND   H.ID = ROU.ID
AND TP.ID = DOS.ID
AND   ROU.TYPE = 15;

CREATE OR REPLACE VIEW V_STATS_LISTE_ALL_ACTE  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, TP.DATERETOUR
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND DOS.STATUTARCHIVAGE IN ('1', '2');

CREATE OR REPLACE VIEW V_STATS_LISTE_ALL_ACTE_DETAIL  AS
SELECT  DOS.ID ID, 
		DOS.MINISTEREATTACHE MINISTEREATTACHE,  
		TP.DATERETOUR DATERETOUR, 
		H.POS POS, 
		ROU.DISTRIBUTIONMAILBOXID DISTRIBUTIONMAILBOXID, 
		ROU.TYPE TYPE
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, HIERARCHY H, ROUTING_TASK ROU
WHERE DOS.ID = TP.ID
AND   DOS.LASTDOCUMENTROUTE = H.PARENTID
And   Dos.Statutarchivage In ('1', '2')
AND   H.ID = ROU.ID;

--********
--V_AN
--********
CREATE OR REPLACE VIEW V_AN_LOIS_APPELANT_MESURE  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR
FROM (TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 );
 
CREATE OR REPLACE VIEW V_AN_MESURES_APPELANT_DECRET  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE, 
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE, 
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM)
WHERE TM_MES.TYPEMESURE = '1'
AND   TM_LOI.ID = TEXM.ID;

CREATE OR REPLACE VIEW V_AN_MESURES_RECU_APPLICATION  AS
SELECT
TM_LOI.ID AS LOI_ID,
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP,
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
TM_DEC.ID AS DECRET_ID,
TM_DEC.DATEPUBLICATION AS DECRET_DATEPUBLICATION,
TM_MES.DATEMISEAPPLICATION AS MES_DATEMISEAPPLICATION,
TM_MES.DATEENTREEENVIGUEUR as MES_DATEENTREEENVIGUEUR,
TM_MES.DIFFERE as MES_DIFFERE
FROM
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = '1' ),
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
        FROM TEXM_MESUREIDS MX_TEXM,
        (TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
        WHERE TM_MES.ID = MX_TEXD.ID
        AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );

CREATE OR REPLACE VIEW V_AN_MESURES_ATTENTE_DECRET  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.MINISTEREPILOTE AS LOI_MINISTERERESP, 
TM_LOI.DATEPUBLICATION AS LOI_DATEPUBLICATION,
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION, 
TM_LOI.DATEENTREEENVIGUEUR AS LOI_DATEENTREEENVIGUEUR,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE, 
TM_LOI.PROCEDUREVOTE AS LOI_PROCEDUREVOTE, 
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU <> '1';
  
CREATE OR REPLACE VIEW V_AN_MESURES_DELAIS_DERNIER  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
CASE
  WHEN TM_MES.DATEENTREEENVIGUEUR IS NULL 
  THEN TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_LOI.DATEPUBLICATION) day TO second))) / 30) 
  ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_MES.DATEENTREEENVIGUEUR) day TO second))) / 30) 
END DELAIS_EN_MOIS
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MX_TEXM, 
								(TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
								WHERE TM_MES.ID = MX_TEXM.ITEM
								AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_MESURES_DELAIS_PREMIER  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
CASE
  WHEN TM_MES.DATEENTREEENVIGUEUR IS NULL 
  THEN TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_LOI.DATEPUBLICATION) day TO second))) / 30) 
  ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_MES.DATEENTREEENVIGUEUR) day TO second))) / 30) 
END DELAIS_EN_MOIS
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MIN(MN_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MN_TEXM, 
								(TEXTE_MAITRE MN_TM_DEC INNER JOIN TEXM_DECRETIDS MN_TEXD   ON MN_TM_DEC.ID = MN_TEXD.ITEM)
								WHERE TM_MES.ID = MN_TEXM.ITEM
								AND   MN_TEXM.ID = MN_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_MESURES_PUBLIEES  AS
SELECT 
TM_MES.ID AS TM_MESURE_ID,
EXTRACT(DAY FROM TM_DEC.DATEPUBLICATION) AS JOUR_DE_PUBLICATION,
EXTRACT(MONTH FROM TM_DEC.DATEPUBLICATION) AS MOIS_DE_PUBLICATION,
EXTRACT(YEAR FROM TM_DEC.DATEPUBLICATION)  AS ANNEE_DE_PUBLICATION
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MX_TEXM, 
								(TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
								WHERE TM_MES.ID = MX_TEXM.ITEM
								AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_TRANSPOSITION_DIRECTIVE  AS
SELECT 
TM_DIR.NUMERO , TM_DIR.DATEDIRECTIVE, TM_DIR.TITREACTE AS TITRE, TM_DIR.DATEPROCHAINTABAFFICHAGE, TM_DIR.MINISTEREPILOTE AS TD_MINISTEREPILOTE, 
TM_DIR.TABAFFICHAGEMARCHEINT, TM_DIR.ACHEVEE, TM_DIR.OBSERVATION AS TD_OBSERVATION, TM_DIR.DATEECHEANCE,  
VOC."label" AS NATURE, TM_TT.NUMERONOR, TM_TT.MINISTEREPILOTE AS TT_MINISTERE_PILOTE, TM_TT.ETAPESOLON, TM_TT.NUMEROTEXTEPUBLIE,
TM_TT.TITRETEXTEPUBLIE, TM_TT.DATEPUBLICATION
FROM 
((((
 TEXTE_MAITRE TM_DIR 
 INNER JOIN      ACTIVITE_NORMATIVE AN ON TM_DIR.ID = AN.ID AND AN.TRANSPOSITION = 1 ) 
 LEFT OUTER JOIN TEXM_DOSSIERSNOR TEXN ON TM_DIR.ID = TEXN.ID)
 LEFT OUTER JOIN TEXTE_MAITRE TM_TT    ON TEXN.ITEM = TM_TT.NUMERONOR)
 LEFT OUTER JOIN VOC_ACTE_TYPE VOC     ON TM_TT.NATURETEXTE = VOC."id");
 
CREATE OR REPLACE VIEW V_AN_LOI_HAB_ORDONNANCE  AS
SELECT 
TM_RAC.NUMERO AS RAC_NUMERO,
TM_RAC.DATEPUBLICATION AS RAC_DATEPUBLICATION,
TM_RAC.TITREACTE AS RAC_TITREACTE,
TM_HAB.NUMEROORDRE AS HAB_NUMEROORDRE,
TM_HAB.ARTICLE AS HAB_ARTICLE,
TM_HAB.OBJETRIM AS HAB_OBJETRIM,
VOC_THAB."label" AS HAB_LBLTYPEHABILITATION,
TM_HAB.TYPEHABILITATION AS HAB_TYPEHABILITATION,
TM_HAB.MINISTEREPILOTE AS HAB_MINISTEREPILOTE,
TM_HAB.DATESAISINECE AS HAB_DATESAISINECE,
TM_HAB.DATEPREVISIONNELLECM AS HAB_DATEPREVISIONNELLECM,
TM_HAB.LEGISLATURE AS HAB_LEGISLATURE,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.TITREACTE AS ORD_TITREACTE,
TM_ORD.NUMERO AS ORD_NUMERO,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_ORD.TERMEDEPOT AS ORD_TERMEDEPOT, 
TM_ORD.DATETERME AS ORD_DATETERME,
TM_ORD.DATELIMITEDEPOT AS ORD_DATELIMITEDEPOT,
TM_ORD.OBSERVATION  AS ORD_OBSERVATION
FROM 
 TEXTE_MAITRE TM_RAC 
 INNER JOIN      ACTIVITE_NORMATIVE AN      ON TM_RAC.ID  = AN.ID AND AN.ORDONNANCE38C = 1
 LEFT OUTER JOIN TEXM_HABILITATIONIDS TEXH  ON TM_RAC.ID  = TEXH.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_HAB        ON TEXH.ITEM  = TM_HAB.ID 
 	LEFT OUTER JOIN VOC_TYPE_HABILITATION VOC_THAB ON TM_HAB.TYPEHABILITATION = VOC_THAB."id"
 LEFT OUTER JOIN TEXM_ORDONNANCEIDS TEXO    ON TM_HAB.ID  = TEXO.ID  
 LEFT OUTER JOIN TEXTE_MAITRE TM_ORD        ON TEXO.ITEM  = TM_ORD.ID  
ORDER BY TM_RAC.NUMERO, TM_ORD.DATETERME;

CREATE OR REPLACE VIEW V_AN_ORDONNANCE_38  AS
SELECT 
TM_RAC.NUMERO AS RAC_NUMERO,
TM_RAC.TITREACTE AS RAC_TITREACTE,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.MINISTEREPILOTE AS ORD_MINISTEREPILOTE,
TM_ORD.TITREACTE AS ORD_TITREACTE,
TM_ORD.NUMERO AS ORD_NUMERO,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_LRA.DATELIMITEDEPOT AS LRA_DATELIMITEDEPOT,
TM_LRA.CONVENTIONDEPOT AS LRA_CONVENTIONDEPOT,
TM_LRA.NUMERONOR AS LRA_NUMERONOR,
TM_LRA.TITREACTE AS LRA_TITREACTE,
TM_LRA.CHAMBREDEPOT AS LRA_CHAMBREDEPOT,
TM_LRA.DATEDEPOT AS LRA_DATEDEPOT,
TM_LRA.NUMERODEPOT AS LRA_NUMERODEPOT,
TM_LRA.TITREOFFICIEL AS LRA_TITREOFFICIEL,
TM_LRA.DATEPUBLICATION AS LRA_DATEPUBLICATION
FROM 
 (TEXTE_MAITRE TM_ORD 
 INNER JOIN      ACTIVITE_NORMATIVE AN      ON TM_ORD.ID  = AN.ID AND AN.ORDONNANCE = 1 AND  TM_ORD.DISPOSITIONHABILITATION = 1)
 LEFT OUTER JOIN
 ( SELECT TEXO.ITEM, TM_RAC.* FROM
   TEXM_ORDONNANCEIDS TEXO
   INNER JOIN      TEXTE_MAITRE TM_HAB        ON TEXO.ID    = TM_HAB.ID
   INNER JOIN      TEXM_HABILITATIONIDS TEXH  ON TM_HAB.ID  = TEXH.ITEM
   INNER JOIN      TEXTE_MAITRE TM_RAC        ON TEXH.ID    = TM_RAC.ID ) TM_RAC ON TM_ORD.ID = TM_RAC.ITEM
 LEFT OUTER JOIN   TEXM_LOIRATIFICATIONIDS  TEXL   ON TM_ORD.ID = TEXL.ID
 LEFT OUTER JOIN   TEXTE_MAITRE TM_LRA             ON TEXL.ITEM = TM_LRA.ID 
 ORDER BY TM_LRA.DATELIMITEDEPOT;

CREATE OR REPLACE VIEW V_AN_ORDONNANCE_74  AS
SELECT 
TM_ORD.MINISTEREPILOTE AS ORD_MINISTEREPILOTE,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.NUMERO AS ORD_NUMERO,
TM_ORD.TITREACTE AS ORD_TITREACTE,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_LRA.DATELIMITEDEPOT AS LRA_DATELIMITEDEPOT,
TM_LRA.NUMERONOR AS LRA_NUMERONOR,
TM_LRA.TITREACTE AS LRA_TITREACTE,
TM_LRA.DATEPUBLICATION AS LRA_DATEPUBLICATION
FROM 
 (TEXTE_MAITRE TM_ORD 
 INNER JOIN      ACTIVITE_NORMATIVE AN         ON TM_ORD.ID  = AN.ID AND AN.ORDONNANCE = 1 AND  TM_ORD.DISPOSITIONHABILITATION = 0)
 LEFT OUTER JOIN TEXM_LOIRATIFICATIONIDS  TEXL ON TM_ORD.ID  = TEXL.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRA           ON TEXL.ITEM  = TM_LRA.ID 
 ORDER BY TM_LRA.DATELIMITEDEPOT;

CREATE OR REPLACE VIEW V_AN_HAB_ORD_LOI  AS
SELECT 
TM_RAC.NUMERONOR AS RAC_NUMERONOR,
TM_RAC.TITREACTE AS RAC_TITREACTE,
TM_RAC.DATEPUBLICATION AS RAC_DATEPUBLICATION,
TM_HAB.NUMEROORDRE AS HAB_NUMEROORDRE,
TM_HAB.ARTICLE AS HAB_ARTICLE,
TM_HAB.OBJETRIM AS HAB_OBJETRIM,
VOC_THAB."label" AS HAB_TYPEHABILITATION,
TM_HAB.MINISTEREPILOTE AS HAB_MINISTEREPILOTE,
TM_HAB.DATETERME AS HAB_DATETERME,
TM_HAB.CONVENTIONDEPOT AS HAB_CONVENTIONDEPOT,
TM_HAB.DATESAISINECE AS HAB_DATESAISINECE,
TM_HAB.DATEPREVISIONNELLECM AS HAB_DATEPREVISIONNELLECM,
TM_HAB.OBSERVATION AS HAB_OBSERVATION,
TM_HAB.CODIFICATION AS HAB_CODIFICATION,
TM_HAB.LEGISLATURE AS HAB_LEGISLATURE,
TM_ORD.DISPOSITIONHABILITATION AS ORD_DISPOSITIONHABILITATION,
TM_ORD.NUMERONOR AS ORD_NUMERONOR,
TM_ORD.MINISTEREPILOTE AS ORD_MINISTEREPILOTE,
TM_ORD.DATESAISINECE AS ORD_DATESAISINECE,
TM_ORD.DATEPREVISIONNELLECM AS ORD_DATEPREVISIONNELLECM,
TM_ORD.DATEPUBLICATION AS ORD_DATEPUBLICATION,
TM_ORD.TITREOFFICIEL AS ORD_TITREOFFICIEL,
TM_ORD.CONVENTIONDEPOT AS ORD_CONVENTIONDEPOT,
TM_ORD.DATELIMITEDEPOT AS ORD_DATELIMITEDEPOT,
TM_LRA.NUMERONOR AS LRA_NUMERONOR,
TM_LRA.TITREACTE AS LRA_TITREACTE,
TM_LRA.DATESAISINECE AS LRA_DATESAISINECE,
TM_LRA.DATEEXAMENCE AS LRA_DATEEXAMENCE,
TM_LRA.SECTIONCE AS LRA_SECTIONCE,
TM_LRA.DATEEXAMENCM AS LRA_DATEEXAMENCM,
TM_LRA.CHAMBREDEPOT AS LRA_CHAMBREDEPOT,
TM_LRA.DATEDEPOT AS LRA_DATEDEPOT,
TM_LRA.NUMERODEPOT AS LRA_NUMERODEPOT,
TM_LRA.TITREOFFICIEL AS LRA_TITREOFFICIEL,
TM_LRA.DATEPUBLICATION AS LRA_DATEPUBLICATION,
TM_LRA.NUMEROJOPUBLICATION AS LRA_NUMEROJOPUBLICATION
FROM 
 TEXTE_MAITRE TM_RAC 
 INNER JOIN      ACTIVITE_NORMATIVE AN        ON TM_RAC.ID  = AN.ID AND AN.ORDONNANCE38C = 1
 LEFT OUTER JOIN TEXM_HABILITATIONIDS TEXH    ON TM_RAC.ID  = TEXH.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_HAB          ON TEXH.ITEM  = TM_HAB.ID 
	LEFT OUTER JOIN VOC_TYPE_HABILITATION VOC_THAB ON TM_HAB.TYPEHABILITATION = VOC_THAB."id"
 LEFT OUTER JOIN TEXM_ORDONNANCEIDS TEXO      ON TM_HAB.ID  = TEXO.ID  
 LEFT OUTER JOIN TEXTE_MAITRE TM_ORD          ON TEXO.ITEM  = TM_ORD.ID  
 LEFT OUTER JOIN TEXM_LOIRATIFICATIONIDS TEXL ON TM_ORD.ID  = TEXL.ID
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRA          ON TEXL.ITEM  = TM_LRA.ID 
ORDER BY TM_RAC.NUMERO, TM_ORD.DATETERME;

CREATE OR REPLACE VIEW V_AN_TRAITE_ACCORD  AS
SELECT
TM_TRAIT.CATEGORIE AS TRAIT_CATEGORIE,
TM_TRAIT.ORGANISATION AS TRAIT_ORGANISATION,
TM_TRAIT.THEMATIQUE AS TRAIT_THEMATIQUE,
TM_TRAIT.DEGREPRIORITE AS TRAIT_DEGREPRIORITE,
TM_TRAIT.TITREACTE AS TRAIT_TITREACTE,
TM_TRAIT.DATESIGNATURE AS TRAIT_DATESIGNATURE,
TM_TRAIT.DATEENTREEENVIGUEUR AS TRAIT_DATEENTREEENVIGUEUR,
TM_TRAIT.MINISTEREPILOTE AS TRAIT_MINISTEREPILOTE,
TM_TRAIT.DATEPJL AS TRAIT_DATEPJL,
TM_TRAIT.DISPOETUDEIMPACT AS TRAIT_DISPOETUDEIMPACT,
TM_TRAIT.DATEDEPOTRATIFICATION AS TRAIT_DATEDEPOTRATIFICATION,
TM_TRAIT.AUTORISATIONRATIFICATION AS TRAIT_AUTORISATIONRATIFICATION,
TM_LRAT.NUMERONOR AS LRAT_NUMERONOR,
TM_LRAT.ETAPESOLON AS LRAT_ETAPESOLON,
TM_LRAT.DATEPUBLICATION AS LRAT_DATEPUBLICATION,
TM_LRAT.TITREACTE AS LRAT_TITREACTE,
TM_TRAIT.NUMERONOR AS DECRET_NUMERONOR,
TM_TRAIT.ETAPESOLON AS DECRET_ETAPESOLON,
TM_TRAIT.NUMERO AS DECRET_NUMERO,
TM_TRAIT.DATEPUBLICATION AS DECRET_DATEPUBLICATION,
TM_TRAIT.TITREACTE AS DECRET_TITREACTE,
TM_TRAIT.OBSERVATION AS DECRET_OBSERVATION
FROM 
 TEXTE_MAITRE TM_TRAIT 
 INNER JOIN      ACTIVITE_NORMATIVE AN ON TM_TRAIT.ID = AN.ID AND AN.TRAITE = 1 
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRAT  ON TM_TRAIT.NORLOIRATIFICATION = TM_LRAT.NUMERONOR;
 
CREATE OR REPLACE VIEW V_AN_TRAITE_ACCORD  AS
SELECT
TM_TRAIT.ID AS TRAIT_ID,
TM_TRAIT.CATEGORIE AS TRAIT_CATEGORIE,
TM_TRAIT.ORGANISATION AS TRAIT_ORGANISATION,
TM_TRAIT.THEMATIQUE AS TRAIT_THEMATIQUE,
TM_TRAIT.DEGREPRIORITE AS TRAIT_DEGREPRIORITE,
TM_TRAIT.TITREACTE AS TRAIT_TITREACTE,
TM_TRAIT.DATESIGNATURE AS TRAIT_DATESIGNATURE,
TM_TRAIT.DATEENTREEENVIGUEUR AS TRAIT_DATEENTREEENVIGUEUR,
TM_TRAIT.MINISTEREPILOTE AS TRAIT_MINISTEREPILOTE,
TM_TRAIT.DATEPJL AS TRAIT_DATEPJL,
TM_TRAIT.DISPOETUDEIMPACT AS TRAIT_DISPOETUDEIMPACT,
TM_TRAIT.ETUDEIMPACT AS TRAIT_ETUDEIMPACT,
TM_TRAIT.DATEDEPOTRATIFICATION AS TRAIT_DATEDEPOTRATIFICATION,
TM_TRAIT.AUTORISATIONRATIFICATION AS TRAIT_AUTORISATIONRATIFICATION,
TM_LRAT.ID AS LRAT_ID,
TM_LRAT.NUMERONOR AS LRAT_NUMERONOR,
TM_LRAT.ETAPESOLON AS LRAT_ETAPESOLON,
TM_LRAT.DATEPUBLICATION AS LRAT_DATEPUBLICATION,
TM_LRAT.TITREACTE AS LRAT_TITREACTE,
TM_TRAIT.NUMERONOR AS DECRET_NUMERONOR,
TM_TRAIT.ETAPESOLON AS DECRET_ETAPESOLON,
TM_TRAIT.NUMERO AS DECRET_NUMERO,
TM_TRAIT.DATEPUBLICATION AS DECRET_DATEPUBLICATION,
TM_TRAIT.TITREACTE AS DECRET_TITREACTE,
TM_TRAIT.OBSERVATION AS DECRET_OBSERVATION
FROM 
 TEXTE_MAITRE TM_TRAIT 
 INNER JOIN      ACTIVITE_NORMATIVE AN ON TM_TRAIT.ID = AN.ID AND AN.TRAITE = 1 
 LEFT OUTER JOIN TEXTE_MAITRE TM_LRAT  ON TM_TRAIT.NORLOIRATIFICATION = TM_LRAT.NUMERONOR;
 
--------------------------------------------------------
--  VERSION 1.13
--------------------------------------------------------

--------------------------------------------------------
--  MODIF READ ACL
--------------------------------------------------------
 
   
-- #########################################################################################


CREATE TABLE SW_ACLR_USERID_USER (
	"USER_ID" VARCHAR2(34) NOT NULL ENABLE,
	"USERGROUP" VARCHAR(200)
);
 

CREATE TABLE SW_ACLR_USER_ACLID (
	"USERGROUP" VARCHAR(200) NOT NULL ENABLE,
	"ACL_ID" VARCHAR2(34)
);


CREATE TABLE SW_ACLR_DUSER_ACLID (
        "USERGROUP" VARCHAR(200) NOT NULL ENABLE,
        "ACL_ID" VARCHAR2(34)
);


-- #########################################################################################

CREATE INDEX IDX_SW_ACLR_USER_ACLID_UG ON SW_ACLR_USER_ACLID(USERGROUP, ACL_ID);

CREATE INDEX IDX_SW_ACLR_USERID_USER_USERID ON SW_ACLR_USERID_USER(USER_ID, USERGROUP);

CREATE INDEX IDX_SW_ACLR_USERID_USER_USE2 ON SW_ACLR_USERID_USER(USERGROUP, USER_ID);

CREATE INDEX IDX_SW_ACLR_DUSER_ACLID_UG ON SW_ACLR_DUSER_ACLID(USERGROUP, ACL_ID);

-- #########################################################################################


CREATE OR REPLACE PROCEDURE SW_FILL_ACLID(usergroup VARCHAR) IS
  negusers NX_STRING_TABLE := NX_STRING_TABLE();
  aclusers NX_STRING_ARRAY;
  acluser VARCHAR2(32767);
  aclids NX_STRING_TABLE := NX_STRING_TABLE();
  deniedaclids NX_STRING_TABLE := NX_STRING_TABLE();
  sep VARCHAR2(1) := '|';
BEGIN
  -- Build a black list with negative users
  negusers.EXTEND;
  negusers(1) := '-' || usergroup;
  --
  -- find match
  FOR r IN (SELECT acl_id, acl FROM aclr) LOOP
    aclusers := split(r.acl, sep);
    FOR i IN aclusers.FIRST .. aclusers.LAST LOOP
      acluser := aclusers(i);
      IF acluser = usergroup THEN
        -- grant
        aclids.EXTEND;
        aclids(aclids.COUNT) := r.acl_id;
        GOTO next_acl;
      END IF;
      IF acluser MEMBER OF negusers THEN
        deniedaclids.EXTEND;
        deniedaclids(deniedaclids.COUNT) := r.acl_id;
        GOTO next_acl;
      END IF;
    END LOOP;
    <<next_acl>> NULL;
  END LOOP;
  --
  IF aclids.COUNT = 0 THEN
    INSERT INTO SW_ACLR_USER_ACLID VALUES(usergroup, NULL);
  ELSE
    INSERT INTO SW_ACLR_USER_ACLID (SELECT usergroup, COLUMN_VALUE FROM TABLE (aclids));
  END IF;
  IF deniedaclids.COUNT != 0 THEN
    INSERT INTO SW_ACLR_DUSER_ACLID (SELECT usergroup, COLUMN_VALUE FROM TABLE (deniedaclids));
  END IF;
END;
/


CREATE OR REPLACE FUNCTION SW_RETRIEVE_USER(usergroups NX_STRING_TABLE)
RETURN VARCHAR
IS
        PRAGMA AUTONOMOUS_TRANSACTION; -- needed for insert, ok since what we fill is a cache
        user_md5 VARCHAR2(34) := nx_hash_users(usergroups);
        is_decl number := 0;
BEGIN
        select count(*) INTO is_decl FROM SW_ACLR_USERID_USER WHERE user_id = user_md5;
        IF is_decl = 0 THEN
                -- DBMS_OUTPUT.PUT_LINE('sw_add_user : '||user_md5);
                INSERT INTO SW_ACLR_USERID_USER (select user_md5, column_value from TABLE(usergroups));
                FOR t in (select t.column_value AS c from TABLE(usergroups)  t WHERE NOT EXISTS(SELECT 1 FROM SW_ACLR_USER_ACLID  WHERE usergroup = t.column_value)) LOOP
                        SW_FILL_ACLID(t.c);
                END LOOP;
                COMMIT;
        -- ELSE
                -- DBMS_OUTPUT.PUT_LINE('skip_user : '||user_md5);
        END IF;
        RETURN user_md5;
END;
/



CREATE OR REPLACE FUNCTION "SW_GET_READ_ACLS_FOR" (userid VARCHAR)
RETURN NX_STRING_TABLE
-- List read acl ids for a list of user/groups, using the cache
IS
  in_cache NUMBER;
  aclids NX_STRING_TABLE;
BEGIN
	select acl_id BULK COLLECT INTO aclids FROM (
	select a.acl_id AS acl_id FROM SW_ACLR_USERID_USER u, SW_ACLR_USER_ACLID a 
	WHERE u.USERGROUP = a.USERGROUP  AND a.acl_id IS NOT NULL AND u.USER_ID=userid
	MINUS
	select a.acl_id AS acl_id FROM SW_ACLR_USERID_USER u, SW_ACLR_DUSER_ACLID a 
	WHERE u.USERGROUP = a.USERGROUP  AND a.acl_id IS NOT NULL AND u.USER_ID=userid);

    RETURN aclids;
END;
/

CREATE OR REPLACE FUNCTION "NX_GET_READ_ACLS_FOR" (users NX_STRING_TABLE)
RETURN NX_STRING_TABLE
-- List read acl ids for a list of user/groups, using the cache
IS
  user_md5 VARCHAR2(34) := sw_retrieve_user(users);
BEGIN
  RETURN SW_GET_READ_ACLS_FOR(user_md5);
END;
/




CREATE OR REPLACE PROCEDURE "NX_VACUUM_READ_ACLS"
-- Remove unused read acls entries
IS
BEGIN
  -- nx_vacuum_read_acls vacuuming
  DELETE FROM aclr WHERE acl_id IN (SELECT r.acl_id FROM aclr r
    JOIN hierarchy_read_acl h ON r.acl_id=h.acl_id
    WHERE h.acl_id IS NULL);
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_modified';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USERID_USER';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USER_ACLID';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_DUSER_ACLID';
END;
/


  CREATE OR REPLACE PROCEDURE "NX_REBUILD_READ_ACLS"
-- Rebuild the read acls tables
IS
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE hierarchy_read_acl';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_modified';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USERID_USER';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_USER_ACLID';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE SW_ACLR_DUSER_ACLID';
  INSERT INTO hierarchy_read_acl
    SELECT id, nx_get_read_acl_id(id)
      FROM (SELECT id FROM hierarchy WHERE isproperty = 0);
END;
/




  CREATE OR REPLACE TRIGGER "NX_TRIG_HIER_READ_ACL_MOD"
  AFTER INSERT OR UPDATE ON hierarchy_read_acl
  FOR EACH ROW
   WHEN (NEW.acl_id IS NOT NULL) BEGIN
  MERGE INTO aclr USING DUAL
    ON (aclr.acl_id = :NEW.acl_id)
    WHEN NOT MATCHED THEN
    INSERT (acl_id, acl) VALUES (:NEW.acl_id, nx_get_read_acl(:NEW.id));
END;
/


CREATE OR REPLACE TRIGGER "NX_TRIG_ACLR_MODIFIED"
  AFTER INSERT ON aclr
  FOR EACH ROW
   WHEN (NEW.acl_id IS NOT NULL) DECLARE
  acl NX_STRING_ARRAY;
  ace VARCHAR(4000);
  sep VARCHAR2(1) := '|';
  neg VARCHAR2(200);
BEGIN
		acl := split(:NEW.acl, sep);
        FOR r IN (SELECT DISTINCT USERGROUP FROM SW_ACLR_USER_ACLID) LOOP
				neg := '-'||r.usergroup;
                FOR i IN acl.FIRST .. acl.LAST LOOP
                        ace := acl(i);
                        IF ace = r.usergroup THEN
                                -- GRANTED
                                INSERT INTO SW_ACLR_USER_ACLID SELECT r.usergroup, :NEW.acl_id FROM DUAL
                                WHERE NOT EXISTS (SELECT 1 FROM SW_ACLR_USER_ACLID WHERE usergroup = r.usergroup AND acl_id = :NEW.acl_id);
						ELSIF ace = neg THEN
								--DENY
								INSERT INTO SW_ACLR_DUSER_ACLID SELECT r.usergroup, :NEW.acl_id FROM DUAL
                                WHERE NOT EXISTS (SELECT 1 FROM SW_ACLR_DUSER_ACLID WHERE usergroup = r.usergroup AND acl_id = :NEW.acl_id);
                        END IF;
                END LOOP;
        END LOOP;
END;
/




-- #########################################################################################

DROP TABLE ACLR_USER;

DROP TABLE ACLR_USER_MAP;

--------------------------------------------------------
--  TITRE ACTE :
--------------------------------------------------------

ALTER TABLE "FULLTEXT" DROP
	(
		"FULLTEXT_NOR",
        "SIMPLETEXT_NOR",
        "BINARYTEXT_NOR"
	);	   
   
ALTER TABLE "FULLTEXT" ADD
	(
		"FULLTEXT_TITREACTE" CLOB,
        "SIMPLETEXT_TITREACTE" NCLOB,
        "BINARYTEXT_TITREACTE" NCLOB
	);



   
CREATE OR REPLACE TRIGGER "NX_TRIG_FT_UPDATE"
  BEFORE INSERT OR UPDATE ON "FULLTEXT"
  FOR EACH ROW
BEGIN
    :NEW."FULLTEXT" := :NEW."SIMPLETEXT" || :NEW."BINARYTEXT";    
	:NEW."FULLTEXT_TITREACTE" := :NEW."SIMPLETEXT_TITREACTE" || :NEW."BINARYTEXT_TITREACTE";
END;
/


UPDATE FULLTEXT F SET F.FULLTEXT_TITREACTE = (SELECT d.TITREACTE FROM DOSSIER_SOLON_EPG d WHERE F.iD=d.ID);

COMMIT;

--------------------------------------------------------
--  TRAITEMENT PAPIER :
--------------------------------------------------------

/* Ajout de la colonne PAPIERARCHIVE de type xs:boolean */
ALTER TABLE TRAITEMENT_PAPIER ADD PAPIERARCHIVE NUMBER(1,0);

--------------------------------------------------------
--  UPDATE VIEWS :
--------------------------------------------------------

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_SIG_PM_PR  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, DONNEESSIGNATAIRE SIG
				WHERE DOS.ID = H.PARENTID
				AND   H.NAME IN ('tp:signaturePm', 'tp:signaturePr')
				AND   H.ID = SIG.ID
				AND   SIG.DATEENVOISIGNATURE IS NOT NULL
				AND   SIG.DATERETOURSIGNATURE IS NULL);

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_COM  AS
SELECT DOS.*
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TP.TEXTESOUMISAVALIDATION = 1
AND DOS.ID = TP.ID
AND   EXISTS ( 	SELECT * 
				FROM HIERARCHY H, DESTINATAIRECOMMUNICATION DES
				WHERE DOS.ID = H.PARENTID
				AND   H.ID = DES.ID 
				AND   DES.DATERETOURCOMMUNICATION IS NULL 
				AND   DES.DATEENVOICOMMUNICATION IS NOT NULL );

CREATE OR REPLACE VIEW V_AN_MESURES_DELAIS_DERNIER  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
CASE
  WHEN TM_MES.DATEENTREEENVIGUEUR IS NULL 
  THEN (
    CASE WHEN TM_DEC.DATEPUBLICATION < TM_LOI.DATEPUBLICATION THEN 0
    ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_LOI.DATEPUBLICATION) day TO second))) / 30) END
  )
  ELSE (
    CASE WHEN TM_DEC.DATEPUBLICATION < TM_MES.DATEENTREEENVIGUEUR THEN 0
    ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_MES.DATEENTREEENVIGUEUR) day TO second))) / 30) END
  )
END DELAIS_EN_MOIS
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MAX(MX_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MX_TEXM, 
								(TEXTE_MAITRE MX_TM_DEC INNER JOIN TEXM_DECRETIDS MX_TEXD   ON MX_TM_DEC.ID = MX_TEXD.ITEM)
								WHERE TM_MES.ID = MX_TEXM.ITEM
								AND   MX_TEXM.ID = MX_TM_DEC.ID
                                );
								
CREATE OR REPLACE VIEW V_AN_MESURES_DELAIS_PREMIER  AS
SELECT 
TM_LOI.ID AS LOI_ID, 
TM_LOI.DATEPROMULGATION AS LOI_DATEPROMULGATION,
TM_LOI.NATURETEXTE AS LOI_NATURETEXTE,
TM_MES.ID AS MESURE_ID,
TM_MES.MINISTEREPILOTE AS MESURE_MINISTEREPILOTE,
CASE
  WHEN TM_MES.DATEENTREEENVIGUEUR IS NULL 
  THEN (
    CASE WHEN TM_DEC.DATEPUBLICATION < TM_LOI.DATEPUBLICATION THEN 0
    ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_LOI.DATEPUBLICATION) day TO second))) / 30) END
  )
  ELSE (
    CASE WHEN TM_DEC.DATEPUBLICATION < TM_MES.DATEENTREEENVIGUEUR THEN 0
    ELSE TRUNC(abs(extract(day FROM ((TM_DEC.DATEPUBLICATION - TM_MES.DATEENTREEENVIGUEUR) day TO second))) / 30) END
  )
END DELAIS_EN_MOIS
FROM 
(TEXTE_MAITRE TM_LOI INNER JOIN ACTIVITE_NORMATIVE AN ON TM_LOI.ID = AN.ID AND AN.APPLICATIONLOI = 1 ), 
(TEXTE_MAITRE TM_MES INNER JOIN TEXM_MESUREIDS TEXM   ON TM_MES.ID = TEXM.ITEM),
(TEXTE_MAITRE TM_DEC INNER JOIN TEXM_DECRETIDS TEXD   ON TM_DEC.ID = TEXD.ITEM)
WHERE TM_LOI.ID = TEXM.ID
AND   TM_MES.TYPEMESURE = '1'
AND   TM_MES.APPLICATIONRECU = '1'
AND   TM_MES.ID = TEXD.ID
AND   TM_DEC.DATEPUBLICATION = (SELECT MIN(MN_TM_DEC.DATEPUBLICATION)
								FROM TEXM_MESUREIDS MN_TEXM, 
								(TEXTE_MAITRE MN_TM_DEC INNER JOIN TEXM_DECRETIDS MN_TEXD   ON MN_TM_DEC.ID = MN_TEXD.ITEM)
								WHERE TM_MES.ID = MN_TEXM.ITEM
								AND   MN_TEXM.ID = MN_TM_DEC.ID
                                );

CREATE OR REPLACE VIEW V_STATS_NOMBRE_ACTE_PAR_TYPE  AS
SELECT DOS.TYPEACTE, DOS.ID, DUB.CREATED DATEDOSSIERCREE
FROM DOSSIER_SOLON_EPG DOS, DUBLINCORE DUB
WHERE DOS.ID = DUB.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2');

--------------------------------------------------------
--  VERSION 1.15
--------------------------------------------------------

--------------------------------------------------------
--  UPDATE VIEWS :
--------------------------------------------------------

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_PUB  AS
SELECT '0' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, DOS.DELAIPUBLICATION, RD.MODEPARUTION,
  NVL(VMP."label",' ') AS MODEPARUTIONLABEL,
  NVL(VPD."label",' ') AS DELAIPUBLICATIONLABEL
FROM DOSSIER_SOLON_EPG DOS, RETOUR_DILA RD, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND RD.MODEPARUTION =  VMP."id"(+)
AND DOS.DELAIPUBLICATION = VPD."id" (+)
AND RD.ID = DOS.ID
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, ROUTING_TASK ROU
				WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
				AND   H.ID = ROU.ID
				AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
				AND   ROU.TYPE IN (13, 14) )
UNION
SELECT '1' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.PUBLICATIONDELAI DELAIPUBLICATION, TP.PUBLICATIONMODEPUBLICATION MODEPARUTION,
  NVL(VMP."label",' ') AS MODEPARUTIONLABEL,
  NVL(VPD."label",' ') AS DELAIPUBLICATIONLABEL
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
AND TP.PUBLICATIONMODEPUBLICATION = VMP."id" (+)
AND TP.PUBLICATIONDELAI = VPD."id" (+)
AND DOS.ID = TP.ID;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_RIG  AS
SELECT DISTINCT DOS.*
FROM DOSSIER_SOLON_EPG DOS,
     TRAITEMENT_PAPIER TP
WHERE DOS.ID = TP.ID
AND   DOS.STATUTARCHIVAGE IN ('1', '2')
AND( 
	EXISTS
	(
		SELECT *
		FROM ACTIONNABLE_CASE_LINK ACT, CASE_LINK CAS, ROUTING_TASK ROU
		WHERE DOS.ID = CAS.CASEDOCUMENTID
		AND   CAS.ID = ACT.ID
		AND   ACT.ROUTINGTASKID = ROU.ID
		AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
		AND   ROU.TYPE = 13
		AND   DOS.DELAIPUBLICATION = 3
	)
	 OR
	(
		TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY') 
		AND   TP.PUBLICATIONDELAI = 3
	)
);

--------------------------------------------------------
--  VERSION 1.16
--------------------------------------------------------

--------------------------------------------------------
--  Index.sql
--------------------------------------------------------

-- Ajour d'index sur la table Feuille de route --

CREATE INDEX "IDX_FEUILLE_ROUTE_DIR" ON "FEUILLE_ROUTE" ("DIRECTION");
CREATE INDEX "IDX_FEUILLE_ROUTE_DEFAULT" ON "FEUILLE_ROUTE" ("FEUILLEROUTEDEFAUT");

-- Ajour d'index sur la table de l'activite normative --

CREATE INDEX "IDX_TEXM_NUMERO" ON "TEXTE_MAITRE" ("NUMERO");
CREATE INDEX "IDX_TEXM_NOR" ON "TEXTE_MAITRE" ("NUMERONOR");
CREATE INDEX "IDX_TEXM_NUMORDRE" ON "TEXTE_MAITRE" ("NUMEROORDRE");
CREATE INDEX "IDX_TEXM_IDDOS" ON "TEXTE_MAITRE" ("IDDOSSIER");
CREATE INDEX "IDX_TEXM_ARTICLE" ON "TEXTE_MAITRE" ("ARTICLE");

--------------------------------------------------------
--  UPDATE VIEWS :
--------------------------------------------------------

CREATE OR REPLACE VIEW V_BORDEREAU_AUTRE_LISTE  AS
SELECT DOS.MINISTERERESP, DOS.NUMERONOR, 
       DOS.TITREACTE, 
       TP.PUBLICATIONEPREUVEENRETOUR,
       TP.PUBLICATIONDELAI,
       TP.PUBLICATIONDATEDEMANDE,
       LISTE.TYPELISTE, LISTE.NUMEROLISTE, 
       LISTE.ID,
       TP.ID as DOCID,
       LISTE.DATEGENERATIONLISTE, 
       LISTE.TYPESIGNATURE,
       NVL(VOCPUBTP."label",' ') AS PUBTPLABEL, 
       NVL(VOCMODEPARU."label",'') AS MODPARULABEL,
       NVL(VOCPUBDEL."label",' ') AS PUBDELAILABEL,
       NVL(VOCVEC."label",'') AS VECTEURPUBLICATION
  FROM DOSSIER_SOLON_EPG DOS,
       TRAITEMENT_PAPIER TP,
       LIS_IDSDOSSIER LISDOS,
       LISTE_TRAITEMENT_PAPI_144E75F6 LISTE,
       VOC_VECTEUR_PUBLICATION_TP VOCPUBTP,
       VOC_MODE_PARUTION VOCMODEPARU,
       VOC_PUBLICATION_DELAI VOCPUBDEL,
       VOC_VECTEUR_PUBLICATION_TP VOCVEC
 WHERE DOS.ID = TP.ID
   AND DOS.ID = LISDOS.ITEM
   AND LISDOS.ID = LISTE.ID
   AND (LISTE.TYPELISTE = '2' OR LISTE.TYPELISTE = '3')
   AND TP.PUBLICATIONNOMPUBLICATION = VOCPUBTP."id"(+)
   AND TP.PUBLICATIONMODEPUBLICATION = VOCMODEPARU."id"(+)
   AND TP.PUBLICATIONDELAI = VOCPUBDEL."id"(+)
   AND TP.PUBLICATIONNOMPUBLICATION = VOCVEC."id"(+);

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_SIG_PM_PR  AS
SELECT DISTINCT DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, 
  NVL(V."label", '') TYPEACTELABEL, MAX(SIG.DATEENVOISIGNATURE)AS DATESIGNATURE
FROM DOSSIER_SOLON_EPG DOS, HIERARCHY H, DONNEESSIGNATAIRE SIG, VOC_ACTE_TYPE V
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND DOS.TYPEACTE = V."id" (+)
AND H.NAME IN ('tp:signaturePm', 'tp:signaturePr')
AND H.PARENTID = DOS.ID
AND H.ID = SIG.ID
AND SIG.DATEENVOISIGNATURE IS NOT NULL
AND SIG.DATERETOURSIGNATURE IS NULL 
GROUP BY DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, NVL(V."label", '');

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_AMPLIATION  AS
SELECT  DOS.ID, 
		DOS.NUMERONOR, 
		DOS.TITREACTE, 
		LISTAGG (AMP.ITEM, ', ') WITHIN GROUP (ORDER BY AMP.ITEM) ITEM,
    (
      SELECT MAX(I.DATEENVOIAMPLIATION) AS DATEENVOIE FROM INFOHISTORIQUEAMPLIATION I, HIERARCHY H 
      WHERE H.PARENTID = DOS.ID AND H.NAME = 'tp:ampliationHistorique'
      AND I.ID = H.ID GROUP BY H.PARENTID
    )AS DATEENVOIE
FROM (DOSSIER_SOLON_EPG DOS INNER JOIN TP_AMPLIATIONDESTINATAIREMAILS AMP ON DOS.ID = AMP.ID AND   DOS.STATUTARCHIVAGE IN ('1', '2'))
GROUP BY DOS.ID, DOS.NUMERONOR, DOS.TITREACTE
order by DATEENVOIE desc;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_PUB  AS
SELECT '0' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, DOS.DELAIPUBLICATION, RD.MODEPARUTION, DOS.MINISTERERESP,
  NVL(VMP."label",' ') AS MODEPARUTIONLABEL,
  NVL(VPD."label",' ') AS DELAIPUBLICATIONLABEL
FROM DOSSIER_SOLON_EPG DOS, RETOUR_DILA RD, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND RD.MODEPARUTION =  VMP."id"(+)
AND DOS.DELAIPUBLICATION = VPD."id" (+)
AND RD.ID = DOS.ID
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, ROUTING_TASK ROU
				WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
				AND   H.ID = ROU.ID
				AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
				AND   ROU.TYPE IN (13, 14) )
UNION
SELECT '1' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.PUBLICATIONDELAI DELAIPUBLICATION, 
  TP.PUBLICATIONMODEPUBLICATION MODEPARUTION, DOS.MINISTERERESP,
  NVL(VMP."label",' ') AS MODEPARUTIONLABEL,
  NVL(VPD."label",' ') AS DELAIPUBLICATIONLABEL
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
AND TP.PUBLICATIONMODEPUBLICATION = VMP."id" (+)
AND TP.PUBLICATIONDELAI = VPD."id" (+)
AND DOS.ID = TP.ID;

--------------------------------------------------------
--  VERSION 2.0 :
--------------------------------------------------------

--------------------------------------------------------
--  index.sql
--------------------------------------------------------

-- index pour le suivi
CREATE INDEX "IDX_MISC_LF" ON "MISC" ("LIFECYCLESTATE");

-- index pour les logs
DROP INDEX IDX_NXP_LOGS_2;
CREATE INDEX "NXP_LOGS_UUID_DATE" ON "NXP_LOGS" ("LOG_DOC_UUID", "LOG_EVENT_DATE");

-- index en trop
drop index HIERARCHY_PRIMARYTYPE_IDX;

--------------------------------------------------------
--  update_requete_simple.sql
--------------------------------------------------------

-- Change le type du num√©ro texte de NUMBER √† NUMEROTEXTE --
ALTER TABLE REQUETE_DOSSIER_SIMPL_A3A85FF2 
MODIFY(
NUMEROTEXTE VARCHAR2(30)
);

--------------------------------------------------------
--  UPDATE VIEWS :
--------------------------------------------------------

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_DILA_PUB  AS
SELECT '0' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, DOS.DELAIPUBLICATION, RD.MODEPARUTION, 
  DOS.MINISTERERESP, TO_CHAR (DOS.DATEPRECISEEPUBLICATION, 'MM/DD/YYYY') AS DATEPRECISEPUB,
  NVL(VMP."label",' ') AS MODEPARUTIONLABEL,
  NVL(VPD."label",' ') AS DELAIPUBLICATIONLABEL
FROM DOSSIER_SOLON_EPG DOS, RETOUR_DILA RD, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND RD.MODEPARUTION =  VMP."id"(+)
AND DOS.DELAIPUBLICATION = VPD."id" (+)
AND RD.ID = DOS.ID
AND EXISTS ( 	SELECT * 
				FROM HIERARCHY H, ROUTING_TASK ROU
				WHERE DOS.LASTDOCUMENTROUTE = H.PARENTID
				AND   H.ID = ROU.ID
				AND   TO_CHAR (ROU.DATEDEBUTETAPE, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
				AND   ROU.TYPE IN (13, 14) )
UNION
SELECT '1' AS IS_TP, DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, TP.PUBLICATIONDELAI DELAIPUBLICATION, DOS.MINISTERERESP,
  TP.PUBLICATIONMODEPUBLICATION MODEPARUTION, TO_CHAR (TP.PUBLICATIONDATEDEMANDE, 'MM/DD/YYYY')  AS DATEPRECISEPUB,
  NVL(VMP."label",' ') AS MODEPARUTIONLABEL,
  NVL(VPD."label",' ') AS DELAIPUBLICATIONLABEL
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, VOC_MODE_PARUTION VMP, VOC_PUBLICATION_DELAI VPD
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TO_CHAR (TP.PUBLICATIONDATEENVOIJO, 'MM/DD/YYYY') = TO_CHAR(SYSTIMESTAMP,'MM/DD/YYYY')
AND TP.PUBLICATIONMODEPUBLICATION = VMP."id" (+)
AND TP.PUBLICATIONDELAI = VPD."id" (+)
AND DOS.ID = TP.ID;

CREATE OR REPLACE VIEW V_STATS_LISTE_TEXTE_COM  AS
SELECT DOS.ID, DOS.NUMERONOR, DOS.TITREACTE, DOS.MINISTEREATTACHE, DOS.MINISTERERESP, 
      DES.NOMDESTINATAIRECOMMUNICATION, TO_CHAR(DES.DATEENVOICOMMUNICATION, 'DD/MM/YYYY')DATEENVOICOMMUNICATION
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, HIERARCHY H, DESTINATAIRECOMMUNICATION DES
WHERE DOS.STATUTARCHIVAGE IN ('1', '2')
AND TP.TEXTESOUMISAVALIDATION = 1
AND DOS.ID = TP.ID
AND DOS.ID = H.PARENTID
AND   H.ID = DES.ID 
AND   DES.DATERETOURCOMMUNICATION IS NULL 
AND   DES.DATEENVOICOMMUNICATION IS NOT NULL
ORDER BY DES.DATEENVOICOMMUNICATION ASC;

CREATE OR REPLACE VIEW V_STATS_LISTE_ALL_ACTE  AS
SELECT DOS.ID, DOS.MINISTEREATTACHE, TP.DATERETOUR, ROU.DISTRIBUTIONMAILBOXID, ROU.DATEFINETAPE
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, HIERARCHY H, ROUTING_TASK ROU
WHERE DOS.ID = TP.ID
AND DOS.LASTDOCUMENTROUTE = H.PARENTID
AND H.ID = ROU.ID
AND DOS.STATUTARCHIVAGE IN ('1', '2');

CREATE OR REPLACE VIEW V_STATS_LISTE_ALL_ACTE_DETAIL  AS
SELECT  DOS.ID ID, 
		DOS.MINISTEREATTACHE MINISTEREATTACHE,  
		TP.DATERETOUR DATERETOUR, 
		H.POS POS, 
		ROU.DISTRIBUTIONMAILBOXID DISTRIBUTIONMAILBOXID, 
		ROU.TYPE TYPE, ROU.DATEFINETAPE
FROM DOSSIER_SOLON_EPG DOS, TRAITEMENT_PAPIER TP, HIERARCHY H, ROUTING_TASK ROU
WHERE DOS.ID = TP.ID
AND   DOS.LASTDOCUMENTROUTE = H.PARENTID
And   Dos.Statutarchivage In ('1', '2')
AND   H.ID = ROU.ID;

COMMIT;

-- denormalisation de created

ALTER TABLE DOSSIER_SOLON_EPG ADD CREATED TIMESTAMP(6);

ALTER TABLE ACTIONNABLE_CASE_LINK ADD CREATED TIMESTAMP(6);

commit;

update DOSSIER_SOLON_EPG d set d.created = (select du.created from dublincore du where du.id = d.id);
update ACTIONNABLE_CASE_LINK a set a.created = (select du.created from dublincore du where du.id = a.id);

commit;

--------------------------------------------------------
--  VERSION 2.1
--------------------------------------------------------

--------------------------------------------------------
--  update voc vecteur publication tp
--------------------------------------------------------

UPDATE VOC_VECTEUR_PUBLICATION_TP 
SET VOC_VECTEUR_PUBLICATION_TP."label" = 'Journal officiel'  
WHERE VOC_VECTEUR_PUBLICATION_TP."id" = '1';

--------------------------------------------------------
--  REBUILD ACL
--------------------------------------------------------

CALL NX_REBUILD_READ_ACLS();

COMMIT;

spool off;